[
    {"version":"Version 0.66.1"},
    {
        "Module": "snowflake_account",
        "Resource": "snowflake_account",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_account",
        "Argument_Reference": [
            {
                "Argument_Name": "admin_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "admin_name (String) Login name of the initial administrative user of the account. A new user is created in the new account with this name and password and granted the ACCOUNTADMIN role in the account. A login name can be any string consisting of letters, numbers, and underscores. Login names are always case-insensitive."
            },
            {
                "Argument_Name": "edition",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "edition (String) Snowflake Edition of the account. Valid values are: STANDARD | ENTERPRISE | BUSINESS_CRITICAL"
            },
            {
                "Argument_Name": "email",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "email (String, Sensitive) Email address of the initial administrative user of the account. This email address is used to send any notifications about the account."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier (i.e. name) for the account; must be unique within an organization, regardless of which Snowflake Region the account is in. In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters except for underscores (_). Note that if the account name includes underscores, features that do not accept account names with underscores (e.g. Okta SSO or SCIM) can reference a version of the account name that substitutes hyphens (-) for the underscores."
            },
            {
                "Argument_Name": "admin_password",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "admin_password (String, Sensitive) Password for the initial administrative user of the account. Optional if the ADMIN_RSA_PUBLIC_KEY parameter is specified. For more information about passwords in Snowflake, see Snowflake-provided Password Policy."
            },
            {
                "Argument_Name": "admin_rsa_public_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "admin_rsa_public_key (String, Sensitive) Assigns a public key to the initial administrative user of the account in order to implement key pair authentication for the user. Optional if the ADMIN_PASSWORD parameter is specified."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the account."
            },
            {
                "Argument_Name": "first_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "first_name (String, Sensitive) First name of the initial administrative user of the account"
            },
            {
                "Argument_Name": "last_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "last_name (String, Sensitive) Last name of the initial administrative user of the account"
            },
            {
                "Argument_Name": "must_change_password",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "must_change_password (Boolean) Specifies whether the new user created to administer the account is forced to change their password upon first login into the account."
            },
            {
                "Argument_Name": "region",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "region (String) ID of the Snowflake Region where the account is created. If no value is provided, Snowflake creates the account in the same Snowflake Region as the current account (i.e. the account in which the CREATE ACCOUNT statement is executed.)"
            },
            {
                "Argument_Name": "region_group",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "region_group (String) ID of the Snowflake Region where the account is created. If no value is provided, Snowflake creates the account in the same Snowflake Region as the current account (i.e. the account in which the CREATE ACCOUNT statement is executed.)"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "is_org_admin",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_org_admin (Boolean) Indicates whether the ORGADMIN role is enabled in an account. If TRUE, the role is enabled."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_account_grant",
        "Resource": "snowflake_account_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_account_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The account privilege to grant. Valid privileges are those in globalPrivileges. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_account_parameter",
        "Resource": "snowflake_account_parameter",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_account_parameter",
        "Argument_Reference": [
            {
                "Argument_Name": "key",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "key (String) Name of account parameter. Valid values are those in account parameters."
            },
            {
                "Argument_Name": "value",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "value (String) Value of account parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_alert",
        "Resource": "snowflake_alert",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_alert",
        "Argument_Reference": [
            {
                "Argument_Name": "action",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "action (String) The SQL statement that should be executed if the condition returns one or more rows."
            },
            {
                "Argument_Name": "condition",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "condition (String) The SQL statement that represents the condition for the alert. (SELECT, SHOW, CALL)"
            },
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the alert."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the alert; must be unique for the database and schema in which the alert is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the alert."
            },
            {
                "Argument_Name": "warehouse",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse (String) The warehouse the alert will use."
            },
            {
                "Argument_Name": "alert_schedule",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "alert_schedule (Block List, Max: 1) The schedule for periodically running an alert. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "cron",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "cron",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "expression",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "expression"
                            },
                            {
                                "Argument_Name": "time_zone",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "time_zone"
                            }
                        ]
                    },
                    {
                        "Argument_Name": "interval",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "interval"
                    }

                ]
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the alert."
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies if an alert should be 'started' (enabled) after creation or should remain 'suspended' (default)."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_api_integration",
        "Resource": "snowflake_api_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_api_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "api_allowed_prefixes",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "api_allowed_prefixes (List of String) Explicitly limits external functions that use the integration to reference one or more HTTPS proxy service endpoints and resources within those proxies."
            },
            {
                "Argument_Name": "api_provider",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "api_provider (String) Specifies the HTTPS proxy service type."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name of the API integration. This name follows the rules for Object Identifiers. The name should be unique among api integrations in your account."
            },
            {
                "Argument_Name": "api_aws_role_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_aws_role_arn (String) ARN of a cloud platform role."
            },
            {
                "Argument_Name": "api_blocked_prefixes",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_blocked_prefixes (List of String) Lists the endpoints and resources in the HTTPS proxy service that are not allowed to be called from Snowflake."
            },
            {
                "Argument_Name": "api_gcp_service_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_gcp_service_account (String) The service account used for communication with the Google API Gateway."
            },
            {
                "Argument_Name": "api_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_key (String, Sensitive) The API key (also called a \u201csubscription key\u201d)."
            },
            {
                "Argument_Name": "azure_ad_application_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_ad_application_id (String) The 'Application (client) id' of the Azure AD app for your remote service."
            },
            {
                "Argument_Name": "azure_tenant_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_tenant_id (String) Specifies the ID for your Office 365 tenant that all Azure API Management instances belong to."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies whether this API integration is enabled or disabled. If the API integration is disabled, any external function that relies on it will not work."
            },
            {
                "Argument_Name": "google_audience",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "google_audience (String) The audience claim when generating the JWT (JSON Web Token) to authenticate to the Google API Gateway."
            },
            {
                "Argument_Name": "api_aws_external_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_aws_external_id (String) The external ID that Snowflake will use when assuming the AWS role."
            },
            {
                "Argument_Name": "api_aws_iam_user_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "api_aws_iam_user_arn (String) The Snowflake user that will attempt to assume the AWS role."
            },
            {
                "Argument_Name": "azure_consent_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_consent_url (String)"
            },
            {
                "Argument_Name": "azure_multi_tenant_app_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_multi_tenant_app_name (String)"
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the API integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_database",
        "Resource": "snowflake_database",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_database",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String)"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "data_retention_time_in_days",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "data_retention_time_in_days (Number) Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see Understanding & Using Time Travel."
            },
            {
                "Argument_Name": "from_database",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "from_database (String) Specify a database to create a clone from."
            },
            {
                "Argument_Name": "from_replica",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "from_replica (String) Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of \"\".\"\".\"\". An example would be: \"myorg1\".\"account1\".\"db1\""
            },
            {
                "Argument_Name": "from_share",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "from_share (Map of String) Specify a provider and a share in this map to create a database from a share."
            },
            {
                "Argument_Name": "is_transient",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_transient (Boolean) Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss."
            },
            {
                "Argument_Name": "replication_configuration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "replication_configuration (Block List, Max: 1) When set, specifies the configurations for database replication. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "accounts",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "accounts"
                    },
                    {
                        "Argument_Name": "ignore_edition_check",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "ignore_edition_check"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_database_grant",
        "Resource": "snowflake_database_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_database_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the database. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_database_role",
        "Resource": "snowflake_database_role",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_database_role",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the database role."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the database role."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the database role."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_email_notification_integration",
        "Resource": "snowflake_email_notification_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_email_notification_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "allowed_recipients",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_recipients (Set of String) List of email addresses that should receive notifications."
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean)"
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String)"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) A comment for the email integration."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_function",
        "Resource": "snowflake_external_function",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_external_function",
        "Argument_Reference": [
            {
                "Argument_Name": "api_integration",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "api_integration (String) The name of the API integration object that should be used to authenticate the call to the proxy service."
            },
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the external function."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the external function. The identifier can contain the schema name and database name, as well as the function name. The function's signature (name and argument data types) must be unique within the schema."
            },
            {
                "Argument_Name": "return_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "return_behavior (String) Specifies the behavior of the function when returning results"
            },
            {
                "Argument_Name": "return_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "return_type (String) Specifies the data type returned by the external function."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the external function."
            },
            {
                "Argument_Name": "url_of_proxy_and_resource",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "url_of_proxy_and_resource (String) This is the invocation URL of the proxy service and resource through which Snowflake calls the remote service."
            },
            {
                "Argument_Name": "arg",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "arg (Block List) Specifies the arguments/inputs for the external function. These should correspond to the arguments that the remote service expects. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Argument name"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Argument type, e.g. VARCHAR"
                    }
                ]
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) A description of the external function."
            },
            {
                "Argument_Name": "compression",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "compression (String) If specified, the JSON payload is compressed when sent from Snowflake to the proxy service, and when sent back from the proxy service to Snowflake."
            },
            {
                "Argument_Name": "context_headers",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "context_headers (List of String) Binds Snowflake context function results to HTTP headers."
            },
            {
                "Argument_Name": "header",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "header (Block Set) Allows users to specify key-value metadata that is sent with every request as HTTP headers. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Header name"
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Header value"
                    }
                ]
            },
            {
                "Argument_Name": "max_batch_rows",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_batch_rows (Number) This specifies the maximum number of rows in each batch sent to the proxy service."
            },
            {
                "Argument_Name": "null_input_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "null_input_behavior (String) Specifies the behavior of the external function when called with null inputs."
            },
            {
                "Argument_Name": "request_translator",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "request_translator (String) This specifies the name of the request translator function"
            },
            {
                "Argument_Name": "response_translator",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "response_translator (String) This specifies the name of the response translator function."
            },
            {
                "Argument_Name": "return_null_allowed",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "return_null_allowed (Boolean) Indicates whether the function can return NULL values or must return only NON-NULL values."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the external function was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_oauth_integration",
        "Resource": "snowflake_external_oauth_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_external_oauth_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies whether to initiate operation of the integration or suspend it."
            },
            {
                "Argument_Name": "issuer",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "issuer (String) Specifies the URL to define the OAuth 2.0 authorization server."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account."
            },
            {
                "Argument_Name": "snowflake_user_mapping_attribute",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "snowflake_user_mapping_attribute (String) Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record."
            },
            {
                "Argument_Name": "token_user_mapping_claims",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "token_user_mapping_claims (Set of String) Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record."
            },
            {
                "Argument_Name": "type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "type (String) Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server."
            },
            {
                "Argument_Name": "allowed_roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_roles (Set of String) Specifies the list of roles that the client can set as the primary role."
            },
            {
                "Argument_Name": "any_role_mode",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "any_role_mode (String) Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token."
            },
            {
                "Argument_Name": "audience_urls",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "audience_urls (Set of String) Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL"
            },
            {
                "Argument_Name": "blocked_roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "blocked_roles (Set of String) Specifies the list of roles that a client cannot set as the primary role. Do not include ACCOUNTADMIN, ORGADMIN or SECURITYADMIN as they are already implicitly enforced and will cause in-place updates."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the OAuth integration."
            },
            {
                "Argument_Name": "jws_keys_urls",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "jws_keys_urls (Set of String) Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3."
            },
            {
                "Argument_Name": "rsa_public_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key (String) Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers."
            },
            {
                "Argument_Name": "rsa_public_key_2",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key_2 (String) Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation."
            },
            {
                "Argument_Name": "scope_delimiter",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "scope_delimiter (String) Specifies the scope delimiter in the authorization token."
            },
            {
                "Argument_Name": "scope_mapping_attribute",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "scope_mapping_attribute (String) Specifies the access token claim to map the access token to an account role."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the External OAUTH integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_table",
        "Resource": "snowflake_external_table",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_external_table",
        "Argument_Reference": [
            {
                "Argument_Name": "column",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "column (Block List, Min: 1) Definitions of a column to create in the external table. Minimum one required. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "as",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) String that specifies the expression for the column. When queried, the column returns results derived from this expression."
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Column name"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Column type, e.g. VARIANT"
                    }
                ]
            },
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the external table."
            },
            {
                "Argument_Name": "file_format",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "file_format (String) Specifies the file format for the external table."
            },
            {
                "Argument_Name": "location",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "location (String) Specifies a location for the external table."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the external table; must be unique for the database and schema in which the externalTable is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the external table."
            },
            {
                "Argument_Name": "auto_refresh",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "auto_refresh (Boolean) Specifies whether to automatically refresh the external table metadata once, immediately after the external table is created."
            },
            {
                "Argument_Name": "aws_sns_topic",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_topic (String) Specifies the aws sns topic for the external table."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the external table."
            },
            {
                "Argument_Name": "copy_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "copy_grants (Boolean) Specifies to retain the access permissions from the original table when an external table is recreated using the CREATE OR REPLACE TABLE variant"
            },
            {
                "Argument_Name": "partition_by",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "partition_by (List of String) Specifies any partition columns to evaluate for the external table."
            },
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Specifies the file names and/or paths on the external stage to match."
            },
            {
                "Argument_Name": "refresh_on_create",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "refresh_on_create (Boolean) Specifies weather to refresh when an external table is created."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "owner",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "owner (String) Name of the role that owns the external table."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_table_grant",
        "Resource": "snowflake_external_table_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_external_table_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future external tables on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "external_table_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "external_table_name (String) The name of the external table on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all external tables in the given schema. When this is true and no schema_name is provided apply this grant on all external tables in the given database. The external_table_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future external tables in the given schema. When this is true and no schema_name is provided apply this grant on all future external tables in the given database. The external_table_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future external table. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future external tables on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_failover_group",
        "Resource": "snowflake_failover_group",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_failover_group",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also case-sensitive."
            },
            {
                "Argument_Name": "allowed_accounts",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_accounts (Set of String) Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form ."
            },
            {
                "Argument_Name": "allowed_databases",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_databases (Set of String) Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter."
            },
            {
                "Argument_Name": "allowed_integration_types",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_integration_types (Set of String) Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: \"SECURITY INTEGRATIONS\", \"API INTEGRATIONS\""
            },
            {
                "Argument_Name": "allowed_shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_shares (Set of String) Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter."
            },
            {
                "Argument_Name": "from_replica",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "from_replica (Block List, Max: 1) Specifies the name of the replica to use as the source for the failover group. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Identifier for the primary failover group in the source account."
                    },
                    {
                        "Argument_Name": "organization_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of your Snowflake organization."
                    },
                    {
                        "Argument_Name": "source_account_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Source account from which you are enabling replication and failover of the specified objects."
                    }
                ]
            },
            {
                "Argument_Name": "ignore_edition_check",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "ignore_edition_check (Boolean) Allows replicating objects to accounts on lower editions."
            },
            {
                "Argument_Name": "object_types",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_types (Set of String) Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: \"ACCOUNT PARAMETERS\", \"DATABASES\", \"INTEGRATIONS\", \"NETWORK POLICIES\", \"RESOURCE MONITORS\", \"ROLES\", \"SHARES\", \"USERS\", \"WAREHOUSES\""
            },
            {
                "Argument_Name": "replication_schedule",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "replication_schedule (Block List, Max: 1) Specifies the schedule for refreshing secondary failover groups. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "cron",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Max: 1) Specifies the cron expression for the replication schedule. The cron expression must be in the following format: \"minute hour day-of-month month day-of-week\". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "expression",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": " (String) Specifies the cron expression for the replication schedule. The cron expression must be in the following format: \"minute hour day-of-month month day-of-week\". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)"
                            },
                            {
                                "Argument_Name": "time_zone",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) Specifies the time zone for secondary group refresh."
                            }
                        ]
                    },
                    {
                        "Argument_Name": "interval",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Number) Specifies the interval in minutes for the replication schedule. The interval must be greater than 0 and less than 1440 (24 hours)."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_failover_group_grant",
        "Resource": "snowflake_failover_group_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_failover_group_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "failover_group_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "failover_group_name (String) The name of the failover group on which to grant privileges."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the failover group. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_file_format",
        "Resource": "snowflake_file_format",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_file_format",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the file format."
            },
            {
                "Argument_Name": "format_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "format_type (String) Specifies the format of the input files (for data loading) or output files (for data unloading)."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the file format; must be unique for the database and schema in which the file format is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the file format."
            },
            {
                "Argument_Name": "allow_duplicate",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allow_duplicate (Boolean) Boolean that specifies to allow duplicate object field names (only the last one will be preserved)."
            },
            {
                "Argument_Name": "binary_as_text",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "binary_as_text (Boolean) Boolean that specifies whether to interpret columns with no defined logical data type as UTF-8 text."
            },
            {
                "Argument_Name": "binary_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "binary_format (String) Defines the encoding format for binary input or output."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the file format."
            },
            {
                "Argument_Name": "compression",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "compression (String) Specifies the current compression algorithm for the data file."
            },
            {
                "Argument_Name": "date_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "date_format (String) Defines the format of date values in the data files (data loading) or table (data unloading)."
            },
            {
                "Argument_Name": "disable_auto_convert",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "disable_auto_convert (Boolean) Boolean that specifies whether the XML parser disables automatic conversion of numeric and Boolean values from text to native representation."
            },
            {
                "Argument_Name": "disable_snowflake_data",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "disable_snowflake_data (Boolean) Boolean that specifies whether the XML parser disables recognition of Snowflake semi-structured data tags."
            },
            {
                "Argument_Name": "empty_field_as_null",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "empty_field_as_null (Boolean) Specifies whether to insert SQL NULL for empty fields in an input file, which are represented by two successive delimiters."
            },
            {
                "Argument_Name": "enable_octal",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_octal (Boolean) Boolean that enables parsing of octal numbers."
            },
            {
                "Argument_Name": "encoding",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "encoding (String) String (constant) that specifies the character set of the source data when loading data into a table."
            },
            {
                "Argument_Name": "error_on_column_count_mismatch",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "error_on_column_count_mismatch (Boolean) Boolean that specifies whether to generate a parsing error if the number of delimited columns (i.e. fields) in an input file does not match the number of columns in the corresponding table."
            },
            {
                "Argument_Name": "escape",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "escape (String) Single character string used as the escape character for field values."
            },
            {
                "Argument_Name": "escape_unenclosed_field",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "escape_unenclosed_field (String) Single character string used as the escape character for unenclosed field values only."
            },
            {
                "Argument_Name": "field_delimiter",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "field_delimiter (String) Specifies one or more singlebyte or multibyte characters that separate fields in an input file (data loading) or unloaded file (data unloading)."
            },
            {
                "Argument_Name": "field_optionally_enclosed_by",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "field_optionally_enclosed_by (String) Character used to enclose strings."
            },
            {
                "Argument_Name": "file_extension",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "file_extension (String) Specifies the extension for files unloaded to a stage."
            },
            {
                "Argument_Name": "ignore_utf8_errors",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "ignore_utf8_errors (Boolean) Boolean that specifies whether UTF-8 encoding errors produce error conditions."
            },
            {
                "Argument_Name": "null_if",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "null_if (List of String) String used to convert to and from SQL NULL."
            },
            {
                "Argument_Name": "preserve_space",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "preserve_space (Boolean) Boolean that specifies whether the XML parser preserves leading and trailing spaces in element content."
            },
            {
                "Argument_Name": "record_delimiter",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "record_delimiter (String) Specifies one or more singlebyte or multibyte characters that separate records in an input file (data loading) or unloaded file (data unloading)."
            },
            {
                "Argument_Name": "replace_invalid_characters",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "replace_invalid_characters (Boolean) Boolean that specifies whether to replace invalid UTF-8 characters with the Unicode replacement character ()."
            },
            {
                "Argument_Name": "skip_blank_lines",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "skip_blank_lines (Boolean) Boolean that specifies to skip any blank lines encountered in the data files."
            },
            {
                "Argument_Name": "skip_byte_order_mark",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "skip_byte_order_mark (Boolean) Boolean that specifies whether to skip the BOM (byte order mark), if present in a data file."
            },
            {
                "Argument_Name": "skip_header",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "skip_header (Number) Number of lines at the start of the file to skip."
            },
            {
                "Argument_Name": "strip_null_values",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "strip_null_values (Boolean) Boolean that instructs the JSON parser to remove object fields or array elements containing null values."
            },
            {
                "Argument_Name": "strip_outer_array",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "strip_outer_array (Boolean) Boolean that instructs the JSON parser to remove outer brackets."
            },
            {
                "Argument_Name": "strip_outer_element",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "strip_outer_element (Boolean) Boolean that specifies whether the XML parser strips out the outer XML element, exposing 2nd level elements as separate documents."
            },
            {
                "Argument_Name": "time_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "time_format (String) Defines the format of time values in the data files (data loading) or table (data unloading)."
            },
            {
                "Argument_Name": "timestamp_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "timestamp_format (String) Defines the format of timestamp values in the data files (data loading) or table (data unloading)."
            },
            {
                "Argument_Name": "trim_space",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "trim_space (Boolean) Boolean that specifies whether to remove white space from fields."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_file_format_grant",
        "Resource": "snowflake_file_format_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_file_format_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future file formats on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "file_format_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "file_format_name (String) The name of the file format on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all file formats in the given schema. When this is true and no schema_name is provided apply this grant on all file formats in the given database. The file_format_name field must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future file formats in the given schema. When this is true and no schema_name is provided apply this grant on all future file formats in the given database. The file_format_name field must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future file format. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future file formats on which to grant privileges."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_function",
        "Resource": "snowflake_function",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_function",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the function. Don't use the | character."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the function; does not have to be unique for the schema in which the function is created. Don't use the | character."
            },
            {
                "Argument_Name": "return_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "return_type (String) The return type of the function"
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the function. Don't use the | character."
            },
            {
                "Argument_Name": "statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "statement (String) Specifies the javascript / java / sql / python code used to create the function."
            },
            {
                "Argument_Name": "arguments",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "arguments (Block List) List of the arguments for the function (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) The argument name"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) The argument type"
                    }
                ]
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the function."
            },
            {
                "Argument_Name": "handler",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "handler (String) The handler method for Java / Python function."
            },
            {
                "Argument_Name": "imports",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "imports (List of String) Imports for Java / Python functions. For Java this a list of jar files, for Python this is a list of Python files."
            },
            {
                "Argument_Name": "is_secure",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_secure (Boolean) Specifies that the function is secure."
            },
            {
                "Argument_Name": "language",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "language (String) The language of the statement"
            },
            {
                "Argument_Name": "null_input_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "null_input_behavior (String) Specifies the behavior of the function when called with null inputs."
            },
            {
                "Argument_Name": "packages",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "packages (List of String) List of package imports to use for Java / Python functions. For Java, package imports should be of the form: package_name:version_number, where package_name is snowflake_domain:package. For Python use it should be: ('numpy','pandas','xgboost==1.5.0')."
            },
            {
                "Argument_Name": "return_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "return_behavior (String) Specifies the behavior of the function when returning results"
            },
            {
                "Argument_Name": "runtime_version",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "runtime_version (String) Required for Python functions. Specifies Python runtime version."
            },
            {
                "Argument_Name": "target_path",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "target_path (String) The target path for the Java / Python functions. For Java, it is the path of compiled jar files and for the Python it is the path of the Python files."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_function_grant",
        "Resource": "snowflake_function_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_function_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future functions on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "argument_data_types",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "argument_data_types (List of String) List of the argument data types for the function (must be present if function has arguments and function_name is present)"
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "function_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "function_name (String) The name of the function on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all functions in the given schema. When this is true and no schema_name is provided apply this grant on all functions in the given database. The function_name, arguments, return_type, and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future functions in the given schema. When this is true and no schema_name is provided apply this grant on all future functions in the given database. The function_name, arguments, return_type, and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future function. Must be one of USAGE or OWNERSHIP. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future functions on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_integration_grant",
        "Resource": "snowflake_integration_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_integration_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "integration_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "integration_name (String) Identifier for the integration; must be unique for your account."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the integration. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_managed_account",
        "Resource": "snowflake_managed_account",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_managed_account",
        "Argument_Reference": [
            {
                "Argument_Name": "admin_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "admin_name (String) Identifier, as well as login name, for the initial user in the managed account. This user serves as the account administrator for the account."
            },
            {
                "Argument_Name": "admin_password",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "admin_password (String, Sensitive) Password for the initial user in the managed account."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Identifier for the managed account; must be unique for your account."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the managed account."
            },
            {
                "Argument_Name": "type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "type (String) Specifies the type of managed account."
            },
            {
                "Argument_Name": "cloud",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "cloud (String) Cloud in which the managed account is located."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the managed account was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "locator",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "locator (String) Display name of the managed account."
            },
            {
                "Argument_Name": "region",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "region (String) Snowflake Region in which the managed account is located."
            },
            {
                "Argument_Name": "url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "url (String) URL for accessing the managed account, particularly through the web interface."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_masking_policy",
        "Resource": "snowflake_masking_policy",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_masking_policy",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the masking policy."
            },
            {
                "Argument_Name": "masking_expression",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "masking_expression (String) Specifies the SQL expression that transforms the data."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the masking policy; must be unique for the database and schema in which the masking policy is created."
            },
            {
                "Argument_Name": "return_data_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "return_data_type (String) Specifies the data type to return."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the masking policy."
            },
            {
                "Argument_Name": "signature",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "signature (Block List, Min: 1, Max: 1) The signature for the masking policy; specifies the input columns and data types to evaluate at query runtime. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "column",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Min: 1)",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "name",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) Specifies the column name to mask."
                            },
                            {
                                "Argument_Name": "type",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) Specifies the column type to mask."
                            }
                        ]
                    }
                ]
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the masking policy."
            },
            {
                "Argument_Name": "exempt_other_policies",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "exempt_other_policies (Boolean) Specifies whether the row access policy or conditional masking policy can reference a column that is already protected by a masking policy."
            },
            {
                "Argument_Name": "if_not_exists",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "if_not_exists (Boolean) Prevent overwriting a previous masking policy with the same name."
            },
            {
                "Argument_Name": "or_replace",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "or_replace (Boolean) Whether to override a previous masking policy with the same name."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "qualified_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "qualified_name (String) Specifies the qualified identifier for the masking policy."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_masking_policy_grant",
        "Resource": "snowflake_masking_policy_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_masking_policy_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the masking policy on which to grant privileges."
            },
            {
                "Argument_Name": "masking_policy_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "masking_policy_name (String) The name of the masking policy on which to grant privileges immediately."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the masking policy on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the masking policy. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_materialized_view",
        "Resource": "snowflake_materialized_view",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_materialized_view",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the view. Don't use the | character."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the view; must be unique for the schema in which the view is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the view. Don't use the | character."
            },
            {
                "Argument_Name": "statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "statement (String) Specifies the query used to create the view."
            },
            {
                "Argument_Name": "warehouse",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse (String) The warehouse name."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the view."
            },
            {
                "Argument_Name": "is_secure",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_secure (Boolean) Specifies that the view is secure."
            },
            {
                "Argument_Name": "or_replace",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "or_replace (Boolean) Overwrites the View if it exists."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_materialized_view_grant",
        "Resource": "snowflake_materialized_view_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_materialized_view_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future materialized views on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "materialized_view_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "materialized_view_name (String) The name of the materialized view on which to grant privileges immediately (only valid if on_future and on_all are false)."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all materialized views in the given schema. When this is true and no schema_name is provided apply this grant on all materialized views in the given database. The materialized_view_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future materialized views in the given schema. When this is true and no schema_name is provided apply this grant on all future materialized views in the given database. The materialized_view_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future materialized view. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future materialized views on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future and on_all are false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_network_policy",
        "Resource": "snowflake_network_policy",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_network_policy",
        "Argument_Reference": [
            {
                "Argument_Name": "allowed_ip_list",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_ip_list (Set of String) Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account"
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the network policy; must be unique for the account in which the network policy is created."
            },
            {
                "Argument_Name": "blocked_ip_list",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "blocked_ip_list (Set of String) Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake accountDo not add 0.0.0.0/0 to blocked_ip_list"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the network policy."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_network_policy_attachment",
        "Resource": "snowflake_network_policy_attachment",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_network_policy_attachment",
        "Argument_Reference": [
            {
                "Argument_Name": "network_policy_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "network_policy_name (String) Specifies the identifier for the network policy; must be unique for the account in which the network policy is created."
            },
            {
                "Argument_Name": "set_for_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "set_for_account (Boolean) Specifies whether the network policy should be applied globally to your Snowflake accountNote: The Snowflake user running terraform apply must be on an IP address allowed by the network policy to set that policy globally on the Snowflake account.Additionally, a Snowflake account can only have one network policy set globally at any given time. This resource does not enforce one-policy-per-account, it is the user's responsibility to enforce this. If multiple network policy resources have set_for_account: true, the final policy set on the account will be non-deterministic."
            },
            {
                "Argument_Name": "users",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "users (Set of String) Specifies which users the network policy should be attached to"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_notification_integration",
        "Resource": "snowflake_notification_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_notification_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String)"
            },
            {
                "Argument_Name": "aws_sns_role_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_role_arn (String) AWS IAM role ARN for notification integration to assume"
            },
            {
                "Argument_Name": "aws_sns_topic_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_topic_arn (String) AWS SNS Topic ARN for notification integration to connect to"
            },
            {
                "Argument_Name": "aws_sqs_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sqs_arn (String) AWS SQS queue ARN for notification integration to connect to"
            },
            {
                "Argument_Name": "aws_sqs_role_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sqs_role_arn (String) AWS IAM role ARN for notification integration to assume"
            },
            {
                "Argument_Name": "azure_storage_queue_primary_uri",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_storage_queue_primary_uri (String) The queue ID for the Azure Queue Storage queue created for Event Grid notifications"
            },
            {
                "Argument_Name": "azure_tenant_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_tenant_id (String) The ID of the Azure Active Directory tenant used for identity management"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) A comment for the integration"
            },
            {
                "Argument_Name": "direction",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "direction (String) Direction of the cloud messaging with respect to Snowflake (required only for error notifications)"
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean)"
            },
            {
                "Argument_Name": "gcp_pubsub_subscription_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "gcp_pubsub_subscription_name (String) The subscription id that Snowflake will listen to when using the GCP_PUBSUB provider."
            },
            {
                "Argument_Name": "gcp_pubsub_topic_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "gcp_pubsub_topic_name (String) The topic id that Snowflake will use to push notifications."
            },
            {
                "Argument_Name": "notification_provider",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "notification_provider (String) The third-party cloud message queuing service (e.g. AZURE_STORAGE_QUEUE, AWS_SQS, AWS_SNS)"
            },
            {
                "Argument_Name": "type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "type (String) A type of integration"
            },
            {
                "Argument_Name": "aws_sns_external_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_external_id (String) The external ID that Snowflake will use when assuming the AWS role"
            },
            {
                "Argument_Name": "aws_sns_iam_user_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_iam_user_arn (String) The Snowflake user that will attempt to assume the AWS role."
            },
            {
                "Argument_Name": "aws_sqs_external_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sqs_external_id (String) The external ID that Snowflake will use when assuming the AWS role"
            },
            {
                "Argument_Name": "aws_sqs_iam_user_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sqs_iam_user_arn (String) The Snowflake user that will attempt to assume the AWS role."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the notification integration was created."
            },
            {
                "Argument_Name": "gcp_pubsub_service_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "gcp_pubsub_service_account (String) The GCP service account identifier that Snowflake will use when assuming the GCP role"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_oauth_integration",
        "Resource": "snowflake_oauth_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_oauth_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account."
            },
            {
                "Argument_Name": "oauth_client",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_client (String) Specifies the OAuth client type."
            },
            {
                "Argument_Name": "blocked_roles_list",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "blocked_roles_list (Set of String) List of roles that a user cannot explicitly consent to using after authenticating. Do not include ACCOUNTADMIN, ORGADMIN or SECURITYADMIN as they are already implicitly enforced and will cause in-place updates."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the OAuth integration."
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies whether this OAuth integration is enabled or disabled."
            },
            {
                "Argument_Name": "oauth_client_type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_client_type (String) Specifies the type of client being registered. Snowflake supports both confidential and public clients."
            },
            {
                "Argument_Name": "oauth_issue_refresh_tokens",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_issue_refresh_tokens (Boolean) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired."
            },
            {
                "Argument_Name": "oauth_redirect_uri",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_redirect_uri (String) Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI."
            },
            {
                "Argument_Name": "oauth_refresh_token_validity",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_refresh_token_validity (Number) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE."
            },
            {
                "Argument_Name": "oauth_use_secondary_roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "oauth_use_secondary_roles (String) Specifies whether default secondary roles set in the user properties are activated by default in the session being opened."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the OAuth integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_object_parameter",
        "Resource": "snowflake_object_parameter",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_object_parameter",
        "Argument_Reference": [
            {
                "Argument_Name": "key",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "key (String) Name of object parameter. Valid values are those in object parameters."
            },
            {
                "Argument_Name": "value",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "value (String) Value of object parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation."
            },
            {
                "Argument_Name": "object_identifier",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_identifier (Block List) Specifies the object identifier for the object parameter. If no value is provided, then the resource will default to setting the object parameter at account level. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the object to set the parameter for."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the object was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the object was created in."
                    }
                ]
            },
            {
                "Argument_Name": "object_type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_type (String) Type of object to which the parameter applies. Valid values are those in object types. If no value is provided, then the resource will default to setting the object parameter at account level."
            },
            {
                "Argument_Name": "on_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_account (Boolean) If true, the object parameter will be set on the account level."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_password_policy",
        "Resource": "snowflake_password_policy",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_password_policy",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database this password policy belongs to."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Identifier for the password policy; must be unique for your account."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema this password policy belongs to."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Adds a comment or overwrites an existing comment for the password policy."
            },
            {
                "Argument_Name": "if_not_exists",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "if_not_exists (Boolean) Prevent overwriting a previous password policy with the same name."
            },
            {
                "Argument_Name": "lockout_time_mins",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "lockout_time_mins (Number) Specifies the number of minutes the user account will be locked after exhausting the designated number of password retries (i.e. PASSWORD_MAX_RETRIES). Supported range: 1 to 999, inclusive. Default: 15"
            },
            {
                "Argument_Name": "max_age_days",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_age_days (Number) Specifies the maximum number of days before the password must be changed. Supported range: 0 to 999, inclusive. A value of zero (i.e. 0) indicates that the password does not need to be changed. Snowflake does not recommend choosing this value for a default account-level password policy or for any user-level policy. Instead, choose a value that meets your internal security guidelines. Default: 90, which means the password must be changed every 90 days."
            },
            {
                "Argument_Name": "max_length",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_length (Number) Specifies the maximum number of characters the password must contain. This number must be greater than or equal to the sum of PASSWORD_MIN_LENGTH, PASSWORD_MIN_UPPER_CASE_CHARS, and PASSWORD_MIN_LOWER_CASE_CHARS. Supported range: 8 to 256, inclusive. Default: 256"
            },
            {
                "Argument_Name": "max_retries",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_retries (Number) Specifies the maximum number of attempts to enter a password before being locked out. Supported range: 1 to 10, inclusive. Default: 5"
            },
            {
                "Argument_Name": "min_length",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_length (Number) Specifies the minimum number of characters the password must contain. Supported range: 8 to 256, inclusive. Default: 8"
            },
            {
                "Argument_Name": "min_lower_case_chars",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_lower_case_chars (Number) Specifies the minimum number of lowercase characters the password must contain. Supported range: 0 to 256, inclusive. Default: 1"
            },
            {
                "Argument_Name": "min_numeric_chars",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_numeric_chars (Number) Specifies the minimum number of numeric characters the password must contain. Supported range: 0 to 256, inclusive. Default: 1"
            },
            {
                "Argument_Name": "min_special_chars",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_special_chars (Number) Specifies the minimum number of special characters the password must contain. Supported range: 0 to 256, inclusive. Default: 1"
            },
            {
                "Argument_Name": "min_upper_case_chars",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_upper_case_chars (Number) Specifies the minimum number of uppercase characters the password must contain. Supported range: 0 to 256, inclusive. Default: 1"
            },
            {
                "Argument_Name": "or_replace",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "or_replace (Boolean) Whether to override a previous password policy with the same name."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_pipe",
        "Resource": "snowflake_pipe",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_pipe",
        "Argument_Reference": [
            {
                "Argument_Name": "copy_statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "copy_statement (String) Specifies the copy statement for the pipe."
            },
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the pipe."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the pipe; must be unique for the database and schema in which the pipe is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the pipe."
            },
            {
                "Argument_Name": "auto_ingest",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "auto_ingest (Boolean) Specifies a auto_ingest param for the pipe."
            },
            {
                "Argument_Name": "aws_sns_topic_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_topic_arn (String) Specifies the Amazon Resource Name (ARN) for the SNS topic for your S3 bucket."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the pipe."
            },
            {
                "Argument_Name": "error_integration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "error_integration (String) Specifies the name of the notification integration used for error notifications."
            },
            {
                "Argument_Name": "integration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "integration (String) Specifies an integration for the pipe."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "notification_channel",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "notification_channel (String) Amazon Resource Name of the Amazon SQS queue for the stage named in the DEFINITION column."
            },
            {
                "Argument_Name": "owner",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "owner (String) Name of the role that owns the pipe."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_pipe_grant",
        "Resource": "snowflake_pipe_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_pipe_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future pipes on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future pipes in the given schema. When this is true and no schema_name is provided apply this grant on all future pipes in the given database. The pipe_name field must be unset in order to use on_future."
            },
            {
                "Argument_Name": "pipe_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pipe_name (String) The name of the pipe on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future pipe. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future pipes on which to grant privileges."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_procedure",
        "Resource": "snowflake_procedure",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_procedure",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the procedure. Don't use the | character."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the procedure; does not have to be unique for the schema in which the procedure is created. Don't use the | character."
            },
            {
                "Argument_Name": "return_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "return_type (String) The return type of the procedure"
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the procedure. Don't use the | character."
            },
            {
                "Argument_Name": "statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "statement (String) Specifies the code used to create the procedure."
            },
            {
                "Argument_Name": "arguments",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "arguments (Block List) List of the arguments for the procedure (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) The argument name"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) The argument type"
                    }
                ]
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the procedure."
            },
            {
                "Argument_Name": "execute_as",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "execute_as (String) Sets execute context - see caller's rights and owner's rights"
            },
            {
                "Argument_Name": "handler",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "handler (String) The handler method for Java / Python procedures."
            },
            {
                "Argument_Name": "imports",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "imports (List of String) Imports for Java / Python procedures. For Java this a list of jar files, for Python this is a list of Python files."
            },
            {
                "Argument_Name": "language",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "language (String) Specifies the language of the stored procedure code."
            },
            {
                "Argument_Name": "null_input_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "null_input_behavior (String) Specifies the behavior of the procedure when called with null inputs."
            },
            {
                "Argument_Name": "packages",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "packages (List of String) List of package imports to use for Java / Python procedures. For Java, package imports should be of the form: package_name:version_number, where package_name is snowflake_domain:package. For Python use it should be: ('numpy','pandas','xgboost==1.5.0')."
            },
            {
                "Argument_Name": "return_behavior",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "return_behavior (String) Specifies the behavior of the function when returning results"
            },
            {
                "Argument_Name": "runtime_version",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "runtime_version (String) Required for Python procedures. Specifies Python runtime version."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_procedure_grant",
        "Resource": "snowflake_procedure_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_procedure_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future procedures on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "argument_data_types",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "argument_data_types (List of String) List of the argument data types for the procedure (must be present if procedure has arguments and procedure_name is present)"
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all procedures in the given schema. When this is true and no schema_name is provided apply this grant on all procedures in the given database. The procedure_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future procedures in the given schema. When this is true and no schema_name is provided apply this grant on all future procedures in the given database. The procedure_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future procedure. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "procedure_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "procedure_name (String) The name of the procedure on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future procedures on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_resource_monitor",
        "Resource": "snowflake_resource_monitor",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_resource_monitor",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Identifier for the resource monitor; must be unique for your account."
            },
            {
                "Argument_Name": "credit_quota",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "credit_quota (Number) The number of credits allocated monthly to the resource monitor."
            },
            {
                "Argument_Name": "end_timestamp",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "end_timestamp (String) The date and time when the resource monitor suspends the assigned warehouses."
            },
            {
                "Argument_Name": "frequency",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "frequency (String) The frequency interval at which the credit usage resets to 0. If you set a frequency for a resource monitor, you must also set START_TIMESTAMP."
            },
            {
                "Argument_Name": "notify_triggers",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "notify_triggers (Set of Number) A list of percentage thresholds at which to send an alert to subscribed users."
            },
            {
                "Argument_Name": "notify_users",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "notify_users (Set of String) Specifies the list of users to receive email notifications on resource monitors."
            },
            {
                "Argument_Name": "set_for_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "set_for_account (Boolean) Specifies whether the resource monitor should be applied globally to your Snowflake account (defaults to false)."
            },
            {
                "Argument_Name": "start_timestamp",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "start_timestamp (String) The date and time when the resource monitor starts monitoring credit usage for the assigned warehouses."
            },
            {
                "Argument_Name": "suspend_immediate_trigger",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "suspend_immediate_trigger (Number) The number that represents the percentage threshold at which to immediately suspend all warehouses."
            },
            {
                "Argument_Name": "suspend_immediate_triggers",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "suspend_immediate_triggers (Set of Number, Deprecated) A list of percentage thresholds at which to suspend all warehouses."
            },
            {
                "Argument_Name": "suspend_trigger",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "suspend_trigger (Number) The number that represents the percentage threshold at which to suspend all warehouses."
            },
            {
                "Argument_Name": "suspend_triggers",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "suspend_triggers (Set of Number, Deprecated) A list of percentage thresholds at which to suspend all warehouses."
            },
            {
                "Argument_Name": "warehouses",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouses (Set of String) A list of warehouses to apply the resource monitor to."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_resource_monitor_grant",
        "Resource": "snowflake_resource_monitor_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_resource_monitor_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "monitor_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "monitor_name (String) Identifier for the resource monitor; must be unique for your account."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the resource monitor. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_role",
        "Resource": "snowflake_role",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_role",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String)"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_role_grants",
        "Resource": "snowflake_role_grants",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_role_grants",
        "Argument_Reference": [
            {
                "Argument_Name": "role_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "role_name (String) The name of the role we are granting."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to false, multiple grants of the same type cannot be created. This will cause Terraform to revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants role to this specified role."
            },
            {
                "Argument_Name": "users",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "users (Set of String) Grants role to this specified user."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_role_ownership_grant",
        "Resource": "snowflake_role_ownership_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_role_ownership_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "on_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "on_role_name (String) The name of the role ownership is granted on."
            },
            {
                "Argument_Name": "to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "to_role_name (String) The name of the role to grant ownership. Please ensure that the role that terraform is using is granted access."
            },
            {
                "Argument_Name": "current_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "current_grants (String) Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to a new role."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_row_access_policy",
        "Resource": "snowflake_row_access_policy",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_row_access_policy",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the row access policy."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the row access policy; must be unique for the database and schema in which the row access policy is created."
            },
            {
                "Argument_Name": "row_access_expression",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "row_access_expression (String) Specifies the SQL expression. The expression can be any boolean-valued SQL expression."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the row access policy."
            },
            {
                "Argument_Name": "signature",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "signature (Map of String) Specifies signature (arguments) for the row access policy (uppercase and sorted to avoid recreation of resource). A signature specifies a set of attributes that must be considered to determine whether the row is accessible. The attribute values come from the database object (e.g. table or view) to be protected by the row access policy."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the row access policy."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_row_access_policy_grant",
        "Resource": "snowflake_row_access_policy_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_row_access_policy_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the row access policy on which to grant privileges."
            },
            {
                "Argument_Name": "row_access_policy_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "row_access_policy_name (String) The name of the row access policy on which to grant privileges immediately."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the row access policy on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the row access policy. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_saml_integration",
        "Resource": "snowflake_saml_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_saml_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account."
            },
            {
                "Argument_Name": "saml2_issuer",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_issuer (String) The string containing the IdP EntityID / Issuer."
            },
            {
                "Argument_Name": "saml2_provider",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_provider (String) The string describing the IdP. One of the following: OKTA, ADFS, Custom."
            },
            {
                "Argument_Name": "saml2_sso_url",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_sso_url (String) The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message."
            },
            {
                "Argument_Name": "saml2_x509_cert",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_x509_cert (String) The Base64 encoded IdP signing certificate on a single line without the leading -----BEGIN CERTIFICATE----- and ending -----END CERTIFICATE----- markers."
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies whether this security integration is enabled or disabled."
            },
            {
                "Argument_Name": "saml2_enable_sp_initiated",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_enable_sp_initiated (Boolean) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in WIth button on the login page.  FALSE: does not display the Log in With button on the login page."
            },
            {
                "Argument_Name": "saml2_force_authn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_force_authn (Boolean) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake."
            },
            {
                "Argument_Name": "saml2_post_logout_redirect_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_post_logout_redirect_url (String) The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint."
            },
            {
                "Argument_Name": "saml2_requested_nameid_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_requested_nameid_format (String) The SAML NameID format allows Snowflake to set an expectation of the identifying attribute of the user (i.e. SAML Subject) in the SAML assertion from the IdP to ensure a valid authentication to Snowflake. If a value is not specified, Snowflake sends the urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress value in the authentication request to the IdP. NameID must be one of the following values: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified, urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress, urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName, urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName, urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos, urn:oasis:names:tc:SAML:2.0:nameid-format:persistent, urn:oasis:names:tc:SAML:2.0:nameid-format:transient ."
            },
            {
                "Argument_Name": "saml2_sign_request",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_sign_request (Boolean) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed."
            },
            {
                "Argument_Name": "saml2_snowflake_acs_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_snowflake_acs_url (String) The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Default: https://..snowflakecomputing.com/fed/login"
            },
            {
                "Argument_Name": "saml2_snowflake_issuer_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_snowflake_issuer_url (String) The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use."
            },
            {
                "Argument_Name": "saml2_snowflake_x509_cert",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_snowflake_x509_cert (String) The Base64 encoded self-signed certificate generated by Snowflake for use with Encrypting SAML Assertions and Signed SAML Requests. You must have at least one of these features (encrypted SAML assertions or signed SAML responses) enabled in your Snowflake account to access the certificate value."
            },
            {
                "Argument_Name": "saml2_sp_initiated_login_page_label",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_sp_initiated_login_page_label (String) The string containing the label to display after the Log In With button on the login page."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the SAML integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "saml2_digest_methods_used",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_digest_methods_used (String)"
            },
            {
                "Argument_Name": "saml2_signature_methods_used",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_signature_methods_used (String)"
            },
            {
                "Argument_Name": "saml2_snowflake_metadata",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "saml2_snowflake_metadata (String) Metadata created by Snowflake to provide to SAML2 provider."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_schema",
        "Resource": "snowflake_schema",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_schema",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the schema."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the schema; must be unique for the database in which the schema is created."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the schema."
            },
            {
                "Argument_Name": "data_retention_days",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "data_retention_days (Number) Specifies the number of days for which Time Travel actions (CLONE and UNDROP) can be performed on the schema, as well as specifying the default Time Travel retention time for all tables created in the schema."
            },
            {
                "Argument_Name": "is_managed",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_managed (Boolean) Specifies a managed schema. Managed access schemas centralize privilege management with the schema owner."
            },
            {
                "Argument_Name": "is_transient",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_transient (Boolean) Specifies a schema as transient. Transient schemas do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_schema_grant",
        "Resource": "snowflake_schema_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_schema_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the schema on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true, apply this grant on all schemas in the given database. The schema_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true, apply this grant on all future schemas in the given database. The schema_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future schema. Note that if \"OWNERSHIP\" is specified, ensure that the role that terraform is using is granted access. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future and on_all are unset)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_scim_integration",
        "Resource": "snowflake_scim_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_scim_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name of the SCIM integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account."
            },
            {
                "Argument_Name": "provisioner_role",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "provisioner_role (String) Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM."
            },
            {
                "Argument_Name": "scim_client",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "scim_client (String) Specifies the client type for the scim integration"
            },
            {
                "Argument_Name": "network_policy",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "network_policy (String) Specifies an existing network policy active for your account. The network policy restricts the list of user IP addresses when exchanging an authorization code for an access or refresh token and when using a refresh token to obtain a new access token. If this parameter is not set, the network policy for the account (if any) is used instead."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the SCIM integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_sequence",
        "Resource": "snowflake_sequence",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_sequence",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the sequence. Don't use the | character."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the name for the sequence."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the sequence. Don't use the | character."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the sequence."
            },
            {
                "Argument_Name": "increment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "increment (Number) The amount the sequence will increase by each time it is used"
            },
            {
                "Argument_Name": "fully_qualified_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "fully_qualified_name (String) The fully qualified name of the sequence."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "next_value",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "next_value (Number) The next value the sequence will provide."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_sequence_grant",
        "Resource": "snowflake_sequence_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_sequence_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future sequences on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all sequences in the given schema. When this is true and no schema_name is provided apply this grant on all sequences in the given database. The sequence_name field must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future sequences in the given schema. When this is true and no schema_name is provided apply this grant on all future sequences in the given database. The sequence_name field must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future sequence. To grant all privileges, use the value ALL PRIVILEGES"
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future sequences on which to grant privileges."
            },
            {
                "Argument_Name": "sequence_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "sequence_name (String) The name of the sequence on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_session_parameter",
        "Resource": "snowflake_session_parameter",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_session_parameter",
        "Argument_Reference": [
            {
                "Argument_Name": "key",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "key (String) Name of session parameter. Valid values are those in session parameters."
            },
            {
                "Argument_Name": "value",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "value (String) Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation."
            },
            {
                "Argument_Name": "on_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_account (Boolean) If true, the session parameter will be set on the account level."
            },
            {
                "Argument_Name": "user",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "user (String) The user to set the session parameter for. Required if on_account is false"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_share",
        "Resource": "snowflake_share",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_share",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the share; must be unique for the account in which the share is created."
            },
            {
                "Argument_Name": "accounts",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "accounts (List of String) A list of accounts to be added to the share. Values should not be the account locator, but in the form of 'organization_name.account_name"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the managed account."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_stage",
        "Resource": "snowflake_stage",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_stage",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the stage."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the stage; must be unique for the database and schema in which the stage is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the stage."
            },
            {
                "Argument_Name": "aws_external_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_external_id (String)"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the stage."
            },
            {
                "Argument_Name": "copy_options",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "copy_options (String) Specifies the copy options for the stage."
            },
            {
                "Argument_Name": "credentials",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "credentials (String, Sensitive) Specifies the credentials for the stage."
            },
            {
                "Argument_Name": "directory",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "directory (String) Specifies the directory settings for the stage."
            },
            {
                "Argument_Name": "encryption",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "encryption (String) Specifies the encryption settings for the stage."
            },
            {
                "Argument_Name": "file_format",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "file_format (String) Specifies the file format for the stage."
            },
            {
                "Argument_Name": "snowflake_iam_user",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "snowflake_iam_user (String)"
            },
            {
                "Argument_Name": "storage_integration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_integration (String) Specifies the name of the storage integration used to delegate authentication responsibility for external cloud storage to a Snowflake identity and access management (IAM) entity."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "url (String) Specifies the URL for the stage."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_stage_grant",
        "Resource": "snowflake_stage_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_stage_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current stage on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all stages in the given schema. When this is true and no schema_name is provided apply this grant on all stages in the given database. The stage_name field must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future stages in the given schema. When this is true and no schema_name is provided apply this grant on all future stages in the given database. The stage_name field must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the stage. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current stage on which to grant privileges."
            },
            {
                "Argument_Name": "stage_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "stage_name (String) The name of the stage on which to grant privilege (only valid if on_future and on_all are false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_storage_integration",
        "Resource": "snowflake_storage_integration",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_storage_integration",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String)"
            },
            {
                "Argument_Name": "storage_allowed_locations",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_allowed_locations (List of String) Explicitly limits external stages that use the integration to reference one or more storage locations."
            },
            {
                "Argument_Name": "storage_provider",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_provider (String)"
            },
            {
                "Argument_Name": "azure_tenant_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_tenant_id (String)"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean)"
            },
            {
                "Argument_Name": "storage_aws_object_acl",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_aws_object_acl (String) \"bucket-owner-full-control\" Enables support for AWS access control lists (ACLs) to grant the bucket owner full control."
            },
            {
                "Argument_Name": "storage_aws_role_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_aws_role_arn (String)"
            },
            {
                "Argument_Name": "storage_blocked_locations",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_blocked_locations (List of String) Explicitly prohibits external stages that use the integration from referencing one or more storage locations."
            },
            {
                "Argument_Name": "type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "type (String)"
            },
            {
                "Argument_Name": "azure_consent_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_consent_url (String) The consent URL that is used to create an Azure Snowflake service principle inside your tenant."
            },
            {
                "Argument_Name": "azure_multi_tenant_app_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_multi_tenant_app_name (String) This is the name of the Snowflake client application created for your account."
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String) Date and time when the storage integration was created."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "storage_aws_external_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_aws_external_id (String) The external ID that Snowflake will use when assuming the AWS role."
            },
            {
                "Argument_Name": "storage_aws_iam_user_arn",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_aws_iam_user_arn (String) The Snowflake user that will attempt to assume the AWS role."
            },
            {
                "Argument_Name": "storage_gcp_service_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_gcp_service_account (String) This is the name of the Snowflake Google Service Account created for your account."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_stream",
        "Resource": "snowflake_stream",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_stream",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the stream."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the stream."
            },
            {
                "Argument_Name": "append_only",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "append_only (Boolean) Type of the stream that will be created."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the stream."
            },
            {
                "Argument_Name": "insert_only",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "insert_only (Boolean) Create an insert only stream type."
            },
            {
                "Argument_Name": "on_stage",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_stage (String) Name of the stage the stream will monitor."
            },
            {
                "Argument_Name": "on_table",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_table (String) Name of the table the stream will monitor."
            },
            {
                "Argument_Name": "on_view",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_view (String) Name of the view the stream will monitor."
            },
            {
                "Argument_Name": "show_initial_rows",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "show_initial_rows (Boolean) Specifies whether to return all existing rows in the source table as row inserts the first time the stream is consumed."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "owner",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "owner (String) Name of the role that owns the stream."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_stream_grant",
        "Resource": "snowflake_stream_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_stream_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future streams on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all streams in the given schema. When this is true and no schema_name is provided apply this grant on all streams in the given database. The stream_name field must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future streams in the given schema. When this is true and no schema_name is provided apply this grant on all future streams in the given database. The stream_name field must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future stream. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future streams on which to grant privileges."
            },
            {
                "Argument_Name": "stream_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "stream_name (String) The name of the stream on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_table",
        "Resource": "snowflake_table",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_table",
        "Argument_Reference": [
            {
                "Argument_Name": "column",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "column (Block List, Min: 1) Definitions of a column to create in the table. Minimum one required. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Column name"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Column type, e.g. VARIANT"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Column comment"
                    },
                    {
                        "Argument_Name": "default",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Max: 1) Defines the column default value; note due to limitations of Snowflake's ALTER TABLE ADD/MODIFY COLUMN updates to default will not be applied",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "constant",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) The default constant value for the column"
                            },
                            {
                                "Argument_Name": "expression",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) The default expression value for the column"
                            },
                            {
                                "Argument_Name": "sequence",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) The default sequence to use for the column"
                            }
                        ]
                    },
                    {
                        "Argument_Name": "identity",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Max: 1) Defines the identity start/step values for a column. Note Identity/default are mutually exclusive. ",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "start_num",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(Number) The number to start incrementing at."
                            },
                            {
                                "Argument_Name": "step_num",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(Number) Step size to increment by."
                            }
                        ]
                    },
                    {
                        "Argument_Name": "masking_policy",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Masking policy to apply on column"
                    },
                    {
                        "Argument_Name": "nullable",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean) Whether this column can contain null values. Note: Depending on your Snowflake version, the default value will not suffice if this column is used in a primary key constraint."
                    }
                ]
            },
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the table."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the table; must be unique for the database and schema in which the table is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the table."
            },
            {
                "Argument_Name": "change_tracking",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "change_tracking (Boolean) Specifies whether to enable change tracking on the table. Default false."
            },
            {
                "Argument_Name": "cluster_by",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "cluster_by (List of String) A list of one or more table columns/expressions to be used as clustering key(s) for the table"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the table."
            },
            {
                "Argument_Name": "data_retention_days",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "data_retention_days (Number, Deprecated) Specifies the retention period for the table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical data in the table. Default value is 1, if you wish to inherit the parent schema setting then pass in the schema attribute to this argument."
            },
            {
                "Argument_Name": "primary_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "primary_key (Block List, Max: 1, Deprecated) Definitions of primary key constraint to create on table (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "keys",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String) Columns to use in primary key"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of constraint"
                    }
                ]
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "owner",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "owner (String) Name of the role that owns the table."
            },
            {
                "Argument_Name": "qualified_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "qualified_name (String) Qualified name of the table."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_table_column_masking_policy_application",
        "Resource": "snowflake_table_column_masking_policy_application",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_table_column_masking_policy_application",
        "Argument_Reference": [
            {
                "Argument_Name": "column",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "column (String) The column to apply the masking policy to."
            },
            {
                "Argument_Name": "masking_policy",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "masking_policy (String) Fully qualified name (database.schema.policyname) of the policy to apply."
            },
            {
                "Argument_Name": "table",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "table (String) The fully qualified name (database.schema.table) of the table to apply the masking policy to."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_table_constraint",
        "Resource": "snowflake_table_constraint",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_table_constraint",
        "Argument_Reference": [
            {
                "Argument_Name": "columns",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "columns (List of String) Columns to use in constraint key"
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Name of constraint"
            },
            {
                "Argument_Name": "table_id",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "table_id (String) Idenfifier for table to create constraint on. Must be of the form Note: format must follow: \"\".\"\".\"\" or \"..\" or \"|.\" (snowflake_table.my_table.id)"
            },
            {
                "Argument_Name": "type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "type (String) Type of constraint, one of 'UNIQUE', 'PRIMARY KEY', 'FOREIGN KEY', or 'NOT NULL'"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Comment for the table constraint"
            },
            {
                "Argument_Name": "deferrable",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "deferrable (Boolean) Whether the constraint is deferrable"
            },
            {
                "Argument_Name": "enable",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable (Boolean) Specifies whether the constraint is enabled or disabled. These properties are provided for compatibility with Oracle."
            },
            {
                "Argument_Name": "enforced",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enforced (Boolean) Whether the constraint is enforced"
            },
            {
                "Argument_Name": "foreign_key_properties",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "foreign_key_properties (Block List, Max: 1) Additional properties when type is set to foreign key. Not applicable for primary/unique keys (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "match",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) The match type for the foreign key. Not applicable for primary/unique keys"
                    },
                    {
                        "Argument_Name": "on_delete",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Specifies the action performed when the primary/unique key for the foreign key is deleted. Not applicable for primary/unique keys"
                    },
                    {
                        "Argument_Name": "on_update",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Specifies the action performed when the primary/unique key for the foreign key is updated. Not applicable for primary/unique keys"
                    },
                    {
                        "Argument_Name": "references",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Max: 1) The table and columns that the foreign key references. Not applicable for primary/unique keys",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "columns",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(List of String) Columns to use in foreign key reference"
                            },
                            {
                                "Argument_Name": "table_id",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) Name of constraint"
                            }
                        ]
                    }
                ]
            },
            {
                "Argument_Name": "initially",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "initially (String) Whether the constraint is initially deferred or immediate"
            },
            {
                "Argument_Name": "rely",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rely (Boolean) Specifies whether a constraint in NOVALIDATE mode is taken into account during query rewrite."
            },
            {
                "Argument_Name": "validate",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "validate (Boolean) Specifies whether to validate existing data on the table when a constraint is created. Only used in conjunction with the ENABLE property."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_table_grant",
        "Resource": "snowflake_table_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_table_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future tables on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all tables in the given schema. When this is true and no schema_name is provided apply this grant on all tables in the given database. The table_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future tables in the given schema. When this is true and no schema_name is provided apply this grant on all future tables in the given database. The table_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future table. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future tables on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future or on_all are unset)."
            },
            {
                "Argument_Name": "table_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "table_name (String) The name of the table on which to grant privileges immediately (only valid if on_future or on_all are unset)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tag",
        "Resource": "snowflake_tag",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_tag",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the tag."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the tag; must be unique for the database in which the tag is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the tag."
            },
            {
                "Argument_Name": "allowed_values",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allowed_values (List of String) List of allowed values for the tag."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the tag."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tag_association",
        "Resource": "snowflake_tag_association",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_tag_association",
        "Argument_Reference": [
            {
                "Argument_Name": "object_identifier",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "object_identifier (Block List, Min: 1) Specifies the object identifier for the tag association. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the object to associate the tag with."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the object was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the object was created in."
                    }
                ]
            },
            {
                "Argument_Name": "object_type",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "object_type (String) Specifies the type of object to add a tag to. ex: 'ACCOUNT', 'COLUMN', 'DATABASE', etc. For more information: https://docs.snowflake.com/en/user-guide/object-tagging.html#supported-objects"
            },
            {
                "Argument_Name": "tag_id",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "tag_id (String) Specifies the identifier for the tag. Note: format must follow: \"databaseName\".\"schemaName\".\"tagName\" or \"databaseName.schemaName.tagName\" or \"databaseName|schemaName.tagName\" (snowflake_tag.tag.id)"
            },
            {
                "Argument_Name": "tag_value",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "tag_value (String) Specifies the value of the tag, (e.g. 'finance' or 'engineering')"
            },
            {
                "Argument_Name": "object_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_name (String, Deprecated) Specifies the object identifier for the tag association."
            },
            {
                "Argument_Name": "skip_validation",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "skip_validation (Boolean) If true, skips validation of the tag association."
            },
            {
                "Argument_Name": "timeouts",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "timeouts (Block, Optional) (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "create",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tag_grant",
        "Resource": "snowflake_tag_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_tag_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the tag on which to grant privileges."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the tag on which to grant privileges."
            },
            {
                "Argument_Name": "tag_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "tag_name (String) The name of the tag on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the tag. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tag_masking_policy_association",
        "Resource": "snowflake_tag_masking_policy_association",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_tag_masking_policy_association",
        "Argument_Reference": [
            {
                "Argument_Name": "masking_policy_id",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "masking_policy_id (String) The resource id of the masking policy"
            },
            {
                "Argument_Name": "tag_id",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "tag_id (String) Specifies the identifier for the tag. Note: format must follow: \"databaseName\".\"schemaName\".\"tagName\" or \"databaseName.schemaName.tagName\" or \"databaseName|schemaName.tagName\" (snowflake_tag.tag.id)"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_task",
        "Resource": "snowflake_task",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_task",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the task."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the task; must be unique for the database and schema in which the task is created."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the task."
            },
            {
                "Argument_Name": "sql_statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "sql_statement (String) Any single SQL statement, or a call to a stored procedure, executed when the task runs."
            },
            {
                "Argument_Name": "after",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "after (List of String) Specifies one or more predecessor tasks for the current task. Use this option to create a DAG of tasks or add this task to an existing DAG. A DAG is a series of tasks that starts with a scheduled root task and is linked together by dependencies."
            },
            {
                "Argument_Name": "allow_overlapping_execution",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "allow_overlapping_execution (Boolean) By default, Snowflake ensures that only one instance of a particular DAG is allowed to run at a time, setting the parameter value to TRUE permits DAG runs to overlap."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the task."
            },
            {
                "Argument_Name": "enabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enabled (Boolean) Specifies if the task should be started (enabled) after creation or should remain suspended (default)."
            },
            {
                "Argument_Name": "error_integration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "error_integration (String) Specifies the name of the notification integration used for error notifications."
            },
            {
                "Argument_Name": "schedule",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schedule (String) The schedule for periodically running the task. This can be a cron or interval in minutes. (Conflict with after)"
            },
            {
                "Argument_Name": "session_parameters",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "session_parameters (Map of String) Specifies session parameters to set for the session when the task runs. A task supports all session parameters."
            },
            {
                "Argument_Name": "user_task_managed_initial_warehouse_size",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "user_task_managed_initial_warehouse_size (String) Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. (Conflicts with warehouse)"
            },
            {
                "Argument_Name": "user_task_timeout_ms",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "user_task_timeout_ms (Number) Specifies the time limit on a single run of the task before it times out (in milliseconds)."
            },
            {
                "Argument_Name": "warehouse",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse (String) The warehouse the task will use. Omit this parameter to use Snowflake-managed compute resources for runs of this task. (Conflicts with user_task_managed_initial_warehouse_size)"
            },
            {
                "Argument_Name": "when",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "when (String) Specifies a Boolean SQL expression; multiple conditions joined with AND/OR are supported."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_task_grant",
        "Resource": "snowflake_task_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_task_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future tasks on which to grant privileges."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all tasks in the given schema. When this is true and no schema_name is provided apply this grant on all tasks in the given database. The task_name field must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future tasks in the given schema. When this is true and no schema_name is provided apply this grant on all future tasks in the given database. The task_name field must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future task. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future tasks on which to grant privileges."
            },
            {
                "Argument_Name": "task_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "task_name (String) The name of the task on which to grant privileges immediately (only valid if on_future is false)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_user",
        "Resource": "snowflake_user",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_user",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String, Sensitive) Name of the user. Note that if you do not supply login_name this will be used as login_name. doc"
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "default_namespace",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "default_namespace (String) Specifies the namespace (database only or database and schema) that is active by default for the user\u2019s session upon login."
            },
            {
                "Argument_Name": "default_role",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "default_role (String) Specifies the role that is active by default for the user\u2019s session upon login."
            },
            {
                "Argument_Name": "default_secondary_roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "default_secondary_roles (Set of String) Specifies the set of secondary roles that are active for the user\u2019s session upon login. Currently only [\"ALL\"] value is supported - more information can be found in doc"
            },
            {
                "Argument_Name": "default_warehouse",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "default_warehouse (String) Specifies the virtual warehouse that is active by default for the user\u2019s session upon login."
            },
            {
                "Argument_Name": "disabled",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "disabled (Boolean)"
            },
            {
                "Argument_Name": "display_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "display_name (String, Sensitive) Name displayed for the user in the Snowflake web interface."
            },
            {
                "Argument_Name": "email",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "email (String, Sensitive) Email address for the user."
            },
            {
                "Argument_Name": "first_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "first_name (String, Sensitive) First name of the user."
            },
            {
                "Argument_Name": "last_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "last_name (String, Sensitive) Last name of the user."
            },
            {
                "Argument_Name": "login_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "login_name (String, Sensitive) The name users use to log in. If not supplied, snowflake will use name instead."
            },
            {
                "Argument_Name": "must_change_password",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "must_change_password (Boolean) Specifies whether the user is forced to change their password on next login (including their first/initial login) into the system."
            },
            {
                "Argument_Name": "password",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "password (String, Sensitive) WARNING: this will put the password in the terraform state file. Use carefully."
            },
            {
                "Argument_Name": "rsa_public_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key (String) Specifies the user\u2019s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer."
            },
            {
                "Argument_Name": "rsa_public_key_2",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key_2 (String) Specifies the user\u2019s second RSA public key; used to rotate the public and private keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "has_rsa_public_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "has_rsa_public_key (Boolean) Will be true if user as an RSA key set."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_user_grant",
        "Resource": "snowflake_user_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_user_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the user. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "user_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "user_name (String) The name of the user on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_user_ownership_grant",
        "Resource": "snowflake_user_ownership_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_user_ownership_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "on_user_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "on_user_name (String) The name of the user ownership is granted on."
            },
            {
                "Argument_Name": "to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "to_role_name (String) The name of the role to grant ownership. Please ensure that the role that terraform is using is granted access."
            },
            {
                "Argument_Name": "current_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "current_grants (String) Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to a new role."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_user_public_keys",
        "Resource": "snowflake_user_public_keys",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_user_public_keys",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Name of the user."
            },
            {
                "Argument_Name": "rsa_public_key",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key (String) Specifies the user\u2019s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer."
            },
            {
                "Argument_Name": "rsa_public_key_2",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "rsa_public_key_2 (String) Specifies the user\u2019s second RSA public key; used to rotate the public and Public keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_view",
        "Resource": "snowflake_view",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_view",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database in which to create the view. Don't use the | character."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Specifies the identifier for the view; must be unique for the schema in which the view is created. Don't use the | character."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema in which to create the view. Don't use the | character."
            },
            {
                "Argument_Name": "statement",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "statement (String) Specifies the query used to create the view."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String) Specifies a comment for the view."
            },
            {
                "Argument_Name": "copy_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "copy_grants (Boolean) Retains the access permissions from the original view when a new view is created using the OR REPLACE clause."
            },
            {
                "Argument_Name": "is_secure",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_secure (Boolean) Specifies that the view is secure."
            },
            {
                "Argument_Name": "or_replace",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "or_replace (Boolean) Overwrites the View if it exists."
            },
            {
                "Argument_Name": "tag",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tag (Block List, Deprecated) Definitions of a tag to associate with the resource. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag name, e.g. department."
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Tag value, e.g. marketing_info."
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the database that the tag was created in."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of the schema that the tag was created in."
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_view_grant",
        "Resource": "snowflake_view_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_view_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "database_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database_name (String) The name of the database containing the current or future views on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "on_all",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_all (Boolean) When this is set to true and a schema_name is provided, apply this grant on all views in the given schema. When this is true and no schema_name is provided apply this grant on all views in the given database. The view_name and shares fields must be unset in order to use on_all. Cannot be used together with on_future."
            },
            {
                "Argument_Name": "on_future",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "on_future (Boolean) When this is set to true and a schema_name is provided, apply this grant on all future views in the given schema. When this is true and no schema_name is provided apply this grant on all future views in the given database. The view_name and shares fields must be unset in order to use on_future. Cannot be used together with on_all."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the current or future view. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "schema_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema_name (String) The name of the schema containing the current or future views on which to grant privileges."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (Set of String) Grants privilege to these shares (only valid if on_future and on_all are unset)."
            },
            {
                "Argument_Name": "view_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "view_name (String) The name of the view on which to grant privileges immediately (only valid if on_future and on_all are unset)."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_warehouse",
        "Resource": "snowflake_warehouse",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_warehouse",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) Identifier for the virtual warehouse; must be unique for your account."
            },
            {
                "Argument_Name": "auto_resume",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "auto_resume (Boolean) Specifies whether to automatically resume a warehouse when a SQL statement (e.g. query) is submitted to it."
            },
            {
                "Argument_Name": "auto_suspend",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "auto_suspend (Number) Specifies the number of seconds of inactivity after which a warehouse is automatically suspended."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "enable_query_acceleration",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_query_acceleration (Boolean) Specifies whether to enable the query acceleration service for queries that rely on this warehouse for compute resources."
            },
            {
                "Argument_Name": "initially_suspended",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "initially_suspended (Boolean) Specifies whether the warehouse is created initially in the \u2018Suspended\u2019 state."
            },
            {
                "Argument_Name": "max_cluster_count",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_cluster_count (Number) Specifies the maximum number of server clusters for the warehouse."
            },
            {
                "Argument_Name": "max_concurrency_level",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "max_concurrency_level (Number) Object parameter that specifies the concurrency level for SQL statements (i.e. queries and DML) executed by a warehouse."
            },
            {
                "Argument_Name": "min_cluster_count",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "min_cluster_count (Number) Specifies the minimum number of server clusters for the warehouse (only applies to multi-cluster warehouses)."
            },
            {
                "Argument_Name": "query_acceleration_max_scale_factor",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "query_acceleration_max_scale_factor (Number) Specifies the maximum scale factor for leasing compute resources for query acceleration. The scale factor is used as a multiplier based on warehouse size."
            },
            {
                "Argument_Name": "resource_monitor",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "resource_monitor (String) Specifies the name of a resource monitor that is explicitly assigned to the warehouse."
            },
            {
                "Argument_Name": "scaling_policy",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "scaling_policy (String) Specifies the policy for automatically starting and shutting down clusters in a multi-cluster warehouse running in Auto-scale mode."
            },
            {
                "Argument_Name": "statement_queued_timeout_in_seconds",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "statement_queued_timeout_in_seconds (Number) Object parameter that specifies the time, in seconds, a SQL statement (query, DDL, DML, etc.) can be queued on a warehouse before it is canceled by the system."
            },
            {
                "Argument_Name": "statement_timeout_in_seconds",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "statement_timeout_in_seconds (Number) Specifies the time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system"
            },
            {
                "Argument_Name": "wait_for_provisioning",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "wait_for_provisioning (Boolean, Deprecated) Specifies whether the warehouse, after being resized, waits for all the servers to provision before executing any queued or new queries."
            },
            {
                "Argument_Name": "warehouse_size",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse_size (String) Specifies the size of the virtual warehouse. Larger warehouse sizes 5X-Large and 6X-Large are currently in preview and only available on Amazon Web Services (AWS)."
            },
            {
                "Argument_Name": "warehouse_type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse_type (String) Specifies a STANDARD or SNOWPARK-OPTIMIZED warehouse"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_warehouse_grant",
        "Resource": "snowflake_warehouse_grant",
        "Resource_Type": "Resource",
        "Resource_Description": "snowflake_warehouse_grant",
        "Argument_Reference": [
            {
                "Argument_Name": "warehouse_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouse_name (String) The name of the warehouse on which to grant privileges."
            },
            {
                "Argument_Name": "enable_multiple_grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "enable_multiple_grants (Boolean) When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform."
            },
            {
                "Argument_Name": "privilege",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "privilege (String) The privilege to grant on the warehouse. To grant all privileges, use the value ALL PRIVILEGES."
            },
            {
                "Argument_Name": "revert_ownership_to_role_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "revert_ownership_to_role_name (String) The name of the role to revert ownership to on destroy. Has no effect unless privilege is set to OWNERSHIP"
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (Set of String) Grants privilege to these roles."
            },
            {
                "Argument_Name": "with_grant_option",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "with_grant_option (Boolean) When this is set to true, allows the recipient role to grant the privileges to other roles."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_accounts",
        "Resource": "snowflake_accounts",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_accounts",
        "Argument_Reference": [
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Specifies an account name pattern. If a pattern is specified, only accounts matching the pattern are returned."
            },
            {
                "Argument_Name": "accounts",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "accounts (List of Object) List of all the accounts available in the organization. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "account_locator",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "account_locator_url",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "account_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "account_url",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "consumption_billing_entity_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "created_on",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "edition",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "is_org_admin",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "managed_accounts",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "marketplace_consumer_billing_entity_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "marketplace_provider_billing_entity_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "old_account_url",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "organization_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "region_group",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "snowflake_region",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_alerts",
        "Resource": "snowflake_alerts",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_alerts",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the alerts from."
            },
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Filters the command output by object name."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the alerts from."
            },
            {
                "Argument_Name": "alerts",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "alerts (List of Object) Lists alerts for the current/specified database or schema, or across the entire account. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "action",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "condition",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_current_account",
        "Resource": "snowflake_current_account",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_current_account",
        "Argument_Reference": [
            {
                "Argument_Name": "account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "account (String) The Snowflake Account ID; as returned by CURRENT_ACCOUNT()."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "region",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "region (String) The Snowflake Region; as returned by CURRENT_REGION()"
            },
            {
                "Argument_Name": "url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "url (String) The Snowflake URL."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_current_role",
        "Resource": "snowflake_current_role",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_current_role",
        "Argument_Reference": [
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) The name of the primary role in use for the current session."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_database",
        "Resource": "snowflake_database",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_database",
        "Argument_Reference": [
            {
                "Argument_Name": "name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "name (String) The database from which to return its metadata."
            },
            {
                "Argument_Name": "comment",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "comment (String)"
            },
            {
                "Argument_Name": "created_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "created_on (String)"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "is_current",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_current (Boolean)"
            },
            {
                "Argument_Name": "is_default",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "is_default (Boolean)"
            },
            {
                "Argument_Name": "options",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "options (String)"
            },
            {
                "Argument_Name": "origin",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "origin (String)"
            },
            {
                "Argument_Name": "owner",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "owner (String)"
            },
            {
                "Argument_Name": "retention_time",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "retention_time (Number)"
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_database_roles",
        "Resource": "snowflake_database_roles",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_database_roles",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the database roles from."
            },
            {
                "Argument_Name": "database_roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "database_roles (List of Object) Lists all the database roles in a specified database. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_databases",
        "Resource": "snowflake_databases",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_databases",
        "Argument_Reference": [
            {
                "Argument_Name": "history",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "history (Boolean) Optionally includes dropped databases that have not yet been purged The output also includes an additional dropped_on column"
            },
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Optionally filters the databases by a pattern"
            },
            {
                "Argument_Name": "starts_with",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "starts_with (String) Optionally filters the databases by a pattern"
            },
            {
                "Argument_Name": "terse",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "terse (Boolean) Optionally returns only the columns created_on and name in the results"
            },
            {
                "Argument_Name": "databases",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "databases (List of Object) Snowflake databases (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "created_on",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "is_current",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "is_default",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "options",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "origin",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "replication_configuration",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of Object)",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "accounts",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(List of String)"
                            },
                            {
                                "Argument_Name": "ignore_edition_check",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(Boolean)"
                            }
                        ]
                    },
                    {
                        "Argument_Name": "retention_time",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Number)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_functions",
        "Resource": "snowflake_external_functions",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_external_functions",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the external functions from."
            },
            {
                "Argument_Name": "external_functions",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "external_functions (List of Object) The external functions in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "language",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_external_tables",
        "Resource": "snowflake_external_tables",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_external_tables",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the external tables from."
            },
            {
                "Argument_Name": "external_tables",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "external_tables (List of Object) The external tables in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_failover_groups",
        "Resource": "snowflake_failover_groups",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_failover_groups",
        "Argument_Reference": [
            {
                "Argument_Name": "in_account",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "in_account (String) Specifies the identifier for the account"
            },
            {
                "Argument_Name": "failover_groups",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "failover_groups (List of Object) List of all the failover groups available in the system. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "account_locator",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "account_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "allowed_accounts",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    },
                    {
                        "Argument_Name": "allowed_integration_types",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "created_on",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "is_primary",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "next_scheduled_refresh",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "object_types",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    },
                    {
                        "Argument_Name": "organization_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "primary",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "region_group",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "replication_schedule",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "secondary_state",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "snowflake_region",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_file_formats",
        "Resource": "snowflake_file_formats",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_file_formats",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the file formats from."
            },
            {
                "Argument_Name": "file_formats",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "file_formats (List of Object) The file formats in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "format_type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_functions",
        "Resource": "snowflake_functions",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_functions",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the functions from."
            },
            {
                "Argument_Name": "functions",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "functions (List of Object) The functions in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "argument_types",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "return_type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_grants",
        "Resource": "snowflake_grants",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_grants",
        "Argument_Reference": [
            {
                "Argument_Name": "future_grants_in",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "future_grants_in (Block List, Max: 1) Lists all privileges on new (i.e. future) objects (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all privileges on new (i.e. future) objects of a specified type in the database granted to a role."
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Block List, Max: 1) Lists all privileges on new (i.e. future) objects of a specified type in the schema granted to a role.",
                        "Child_Arguments": [
                            {
                                "Argument_Name": "schema_name",
                                "Argument_DataType": "",
                                "Argument_Optional": "False",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) The name of the schema to list all privileges of new (ie. future) objects granted to"
                            },
                            {
                                "Argument_Name": "database_name",
                                "Argument_DataType": "",
                                "Argument_Optional": "True",
                                "Argument_Default_Value": "",
                                "Argument_Description": "(String) The database in which the scehma resides. Optional when querying a schema in the current database."
                            }
                        ]
                    }
                ]
            },
            {
                "Argument_Name": "future_grants_to",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "future_grants_to (Block List, Max: 1) Lists all privileges granted to the object on new (i.e. future) objects (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "role",
                        "Argument_DataType": "",
                        "Argument_Optional": "False",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the role."
                    }
                ]
            },
            {
                "Argument_Name": "grants_of",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "grants_of (Block List, Max: 1) Lists all objects to which the given object has been granted (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "role",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all users and roles to which the role has been granted"
                    },
                    {
                        "Argument_Name": "share",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all the accounts for the share and indicates the accounts that are using the share."
                    }
                ]
            },
            {
                "Argument_Name": "grants_on",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "grants_on (Block List, Max: 1) Lists all privileges that have been granted on an object or account (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "account",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean) Object hierarchy to list privileges on. The only valid value is: ACCOUNT. Setting this attribute lists all the account-level (i.e. global) privileges that have been granted to roles."
                    },
                    {
                        "Argument_Name": "object_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Name of object to list privileges on"
                    },
                    {
                        "Argument_Name": "object_type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Type of object to list privileges on."
                    }
                ]
            },
            {
                "Argument_Name": "grants_to",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "grants_to (Block List, Max: 1) Lists all privileges granted to the object (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "role",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all privileges and roles granted to the role"
                    },
                    {
                        "Argument_Name": "share",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all the privileges granted to the share"
                    },
                    {
                        "Argument_Name": "user",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String) Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed"
                    }
                ]
            },
            {
                "Argument_Name": "grants",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "grants (List of Object) The list of grants (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "created_on",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "grant_option",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "granted_by",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "granted_on",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "granted_to",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "grantee_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "privilege",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_masking_policies",
        "Resource": "snowflake_masking_policies",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_masking_policies",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the maskingPolicies from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "masking_policies",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "masking_policies (List of Object) The maskingPolicies in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "kind",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_materialized_views",
        "Resource": "snowflake_materialized_views",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_materialized_views",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the views from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "materialized_views",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "materialized_views (List of Object) The views in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_parameters",
        "Resource": "snowflake_parameters",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_parameters",
        "Argument_Reference": [
            {
                "Argument_Name": "object_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_name (String) If parameter_type is set to \"OBJECT\" then object_name is the name of the object to display object parameters for."
            },
            {
                "Argument_Name": "object_type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "object_type (String) If parameter_type is set to \"OBJECT\" then object_type is the type of object to display object parameters for. Valid values are any object supported by the IN clause of the SHOW PARAMETERS statement, including: WAREHOUSE | DATABASE | SCHEMA | TASK | TABLE"
            },
            {
                "Argument_Name": "parameter_type",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "parameter_type (String) The type of parameter to filter by. Valid values are: \"ACCOUNT\", \"SESSION\", \"OBJECT\"."
            },
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Allows limiting the list of parameters by name using LIKE clause. Refer to Limiting the List of Parameters by Name"
            },
            {
                "Argument_Name": "user",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "user (String) If parameter_type is set to \"SESSION\" then user is the name of the user to display session parameters for."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "parameters",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "parameters (List of Object) The pipes in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "default",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "description",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "key",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "level",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "value",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_pipes",
        "Resource": "snowflake_pipes",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_pipes",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the pipes from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "pipes",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pipes (List of Object) The pipes in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "integration",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_procedures",
        "Resource": "snowflake_procedures",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_procedures",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the procedures from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "procedures",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "procedures (List of Object) The procedures in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "argument_types",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    },
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "return_type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_resource_monitors",
        "Resource": "snowflake_resource_monitors",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_resource_monitors",
        "Argument_Reference": [
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "resource_monitors",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "resource_monitors (List of Object) The resource monitors in the database (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "credit_quota",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "frequency",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
	,
	{
    "Module": "snowflake_role",
    "Resource": "snowflake_role",
    "Resource_Type": "Data Source",
    "Resource_Description": "snowflake_role",
    "Argument_Reference": [
        {
            "Argument_Name": "name",
            "Argument_DataType": "",
            "Argument_Optional": "False",
            "Argument_Default_Value": "",
            "Argument_Description": "name (String) The role for which to return metadata."
        },
        {
            "Argument_Name": "comment",
            "Argument_DataType": "",
            "Argument_Optional": "True",
            "Argument_Default_Value": "",
            "Argument_Description": "comment (String) The comment on the role"
        },
        {
            "Argument_Name": "id",
            "Argument_DataType": "",
            "Argument_Optional": "True",
            "Argument_Default_Value": "",
            "Argument_Description": "id (String) The ID of this resource."
        }
    ],
    "Attribute_Reference": []
}
    ,
    {
        "Module": "snowflake_roles",
        "Resource": "snowflake_roles",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_roles",
        "Argument_Reference": [
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Filters the command output by object name."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "roles",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "roles (List of Object) List of all the roles which you can view across your entire account, including the system-defined roles and any custom roles that exist. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_row_access_policies",
        "Resource": "snowflake_row_access_policies",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_row_access_policies",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the row access policyfrom."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "row_access_policies",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "row_access_policies (List of Object) The row access policy in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_schemas",
        "Resource": "snowflake_schemas",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_schemas",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "schemas",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "schemas (List of Object) The schemas in the database (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_sequences",
        "Resource": "snowflake_sequences",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_sequences",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the sequences from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "sequences",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "sequences (List of Object) The sequences in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_shares",
        "Resource": "snowflake_shares",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_shares",
        "Argument_Reference": [
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Filters the command output by object name."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "shares",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "shares (List of Object) List of all the shares available in the system. (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "kind",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "owner",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "to",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(List of String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_stages",
        "Resource": "snowflake_stages",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_stages",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the stages from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "stages",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "stages (List of Object) The stages in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "storage_integration",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_storage_integrations",
        "Resource": "snowflake_storage_integrations",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_storage_integrations",
        "Argument_Reference": [
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "storage_integrations",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "storage_integrations (List of Object) The storage integrations in the database (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "enabled",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_streams",
        "Resource": "snowflake_streams",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_streams",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the streams from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the streams from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "streams",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "streams (List of Object) The streams in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "table",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_system_generate_scim_access_token",
        "Resource": "snowflake_system_generate_scim_access_token",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_system_generate_scim_access_token",
        "Argument_Reference": [
            {
                "Argument_Name": "integration_name",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "integration_name (String) SCIM Integration Name"
            },
            {
                "Argument_Name": "access_token",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "access_token (String) SCIM Access Token"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_system_get_aws_sns_iam_policy",
        "Resource": "snowflake_system_get_aws_sns_iam_policy",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_system_get_aws_sns_iam_policy",
        "Argument_Reference": [
            {
                "Argument_Name": "aws_sns_topic_arn",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_topic_arn (String) Amazon Resource Name (ARN) of the SNS topic for your S3 bucket"
            },
            {
                "Argument_Name": "aws_sns_topic_policy_json",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_sns_topic_policy_json (String) IAM policy for Snowflake\u2019s SQS queue to subscribe to this topic"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_system_get_privatelink_config",
        "Resource": "snowflake_system_get_privatelink_config",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_system_get_privatelink_config",
        "Argument_Reference": [
            {
                "Argument_Name": "account_name",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "account_name (String) The name of your Snowflake account."
            },
            {
                "Argument_Name": "account_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "account_url (String) The URL used to connect to Snowflake through AWS PrivateLink or Azure Private Link."
            },
            {
                "Argument_Name": "aws_vpce_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_vpce_id (String) The AWS VPCE ID for your account."
            },
            {
                "Argument_Name": "azure_pls_id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_pls_id (String) The Azure Private Link Service ID for your account."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "internal_stage",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "internal_stage (String) The endpoint to connect to your Snowflake internal stage using AWS PrivateLink or Azure Private Link."
            },
            {
                "Argument_Name": "ocsp_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "ocsp_url (String) The OCSP URL corresponding to your Snowflake account that uses AWS PrivateLink or Azure Private Link."
            },
            {
                "Argument_Name": "regionless_account_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "regionless_account_url (String) The regionless URL to connect to your Snowflake account using AWS PrivateLink, Azure Private Link, or Google Cloud Private Service Connect."
            },
            {
                "Argument_Name": "regionless_snowsight_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "regionless_snowsight_url (String) The URL for your organization to access Snowsight using Private Connectivity to the Snowflake Service."
            },
            {
                "Argument_Name": "snowsight_url",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "snowsight_url (String) The URL containing the cloud region to access Snowsight and the Snowflake Marketplace using Private Connectivity to the Snowflake Service."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_system_get_snowflake_platform_info",
        "Resource": "snowflake_system_get_snowflake_platform_info",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_system_get_snowflake_platform_info",
        "Argument_Reference": [
            {
                "Argument_Name": "aws_vpc_ids",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "aws_vpc_ids (List of String) Snowflake AWS Virtual Private Cloud IDs"
            },
            {
                "Argument_Name": "azure_vnet_subnet_ids",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "azure_vnet_subnet_ids (List of String) Snowflake Azure Virtual Network Subnet IDs"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tables",
        "Resource": "snowflake_tables",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_tables",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the tables from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "tables",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tables (List of Object) The tables in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_tasks",
        "Resource": "snowflake_tasks",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_tasks",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the tasks from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "tasks",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "tasks (List of Object) The tasks in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "warehouse",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_users",
        "Resource": "snowflake_users",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_users",
        "Argument_Reference": [
            {
                "Argument_Name": "pattern",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "pattern (String) Users pattern for which to return metadata. Please refer to LIKE keyword from snowflake documentation : https://docs.snowflake.com/en/sql-reference/sql/show-users.html#parameters"
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "users",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "users (List of Object) The users in the database (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "default_namespace",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "default_role",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "default_secondary_roles",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Set of String)"
                    },
                    {
                        "Argument_Name": "default_warehouse",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "disabled",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "display_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "email",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "first_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "has_rsa_public_key",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(Boolean)"
                    },
                    {
                        "Argument_Name": "last_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "login_name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_views",
        "Resource": "snowflake_views",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_views",
        "Argument_Reference": [
            {
                "Argument_Name": "database",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "database (String) The database from which to return the schemas from."
            },
            {
                "Argument_Name": "schema",
                "Argument_DataType": "",
                "Argument_Optional": "False",
                "Argument_Default_Value": "",
                "Argument_Description": "schema (String) The schema from which to return the views from."
            },
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "views",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "views (List of Object) The views in the schema (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "database",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "schema",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    ,
    {
        "Module": "snowflake_warehouses",
        "Resource": "snowflake_warehouses",
        "Resource_Type": "Data Source",
        "Resource_Description": "snowflake_warehouses",
        "Argument_Reference": [
            {
                "Argument_Name": "id",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "id (String) The ID of this resource."
            },
            {
                "Argument_Name": "warehouses",
                "Argument_DataType": "",
                "Argument_Optional": "True",
                "Argument_Default_Value": "",
                "Argument_Description": "warehouses (List of Object) The warehouses in the database (see below for nested schema)",
                "Child_Arguments": [
                    {
                        "Argument_Name": "comment",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "name",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "scaling_policy",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "size",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "state",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    },
                    {
                        "Argument_Name": "type",
                        "Argument_DataType": "",
                        "Argument_Optional": "True",
                        "Argument_Default_Value": "",
                        "Argument_Description": "(String)"
                    }
                ]
            }
        ],
        "Attribute_Reference": []
    }
    
    ]