{"version":3,"file":"static/js/912.fe826087.chunk.js","mappings":"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","sources":["components/templates/EditTemplate.js"],"sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport GitModal from \"../utils/GitModal/GitModal\";\r\nimport TemplateModal from \"../utils/TemplateModal/TemplateModal\";\r\nimport { MdDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { Switch } from \"@chakra-ui/react\";\r\nimport ButtonPanel from \"../utils/ButtonPanel/ButtonPanel\";\r\nimport { FormControl } from \"@chakra-ui/react\";\r\nimport { ChevronRightIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\r\nimport ReactDom from \"react-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { actions, updateTemplateCurrentName } from \"../utils/dataCenter\";\r\nimport DatalistInput from \"react-datalist-input\";\r\nimport EditTables from \"../tables/editTables\";\r\nimport { Alert, AlertIcon } from \"@chakra-ui/react\";\r\nimport { FormLabel } from \"@chakra-ui/react\";\r\nimport { Input, useToast } from \"@chakra-ui/react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport EditCustomTable from \"../tables/EditCustomTable\";\r\nimport \"reactflow/dist/style.css\";\r\nimport ReactFlow, {\r\n  updateEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"reactflow\";\r\nimport CustomDataListInput from \"../utils/CustomDataList/CustomDataListInput\";\r\nimport \"../utils/SideBar/dnd.css\";\r\nimport ContextMenu from \"../utils/ContextMenu/contextMenu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport useResourceNode from \"../hooks/useResourceNode\";\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport {\r\n  updateTemplateName,\r\n  updateTemplateDesc,\r\n  clearTemplateDataState,\r\n  updateTemplateSavedStatus,\r\n  updateRegion,\r\n  initTableData,\r\n} from \"../utils/dataCenter\";\r\n\r\nfunction EditTemplate(props) {\r\n  let temp = useRef(0);\r\n  const params = useParams();\r\n  window.onbeforeunload = function () {\r\n    return \"Data will be lost if you leave the page, are you sure?\";\r\n  };\r\n\r\n  const initialRenderRef = useRef(false);\r\n  const hidding = useSelector((state) => state.datacenter.hiding);\r\n  const initialRef = React.useRef(null);\r\n  const finalRef = React.useRef(null);\r\n\r\n  const toast = useToast();\r\n  const {\r\n    isOpen: saveasIsOpen,\r\n    onOpen: saveasOnOpen,\r\n    onClose: saveasOnClose,\r\n  } = useDisclosure();\r\n  const {\r\n    isOpen: variableIsOpen,\r\n    onOpen: VariableOnOpen,\r\n    onClose: variableOnClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    isOpen: isTemplateModalOpen,\r\n    onOpen: onTemplateModalOpen,\r\n    onClose: onTemplateModalClose,\r\n  } = useDisclosure();\r\n  const [variblesExistance, setVariablesExistance] = useState();\r\n\r\n  const [exception, setException] = useState(\"\");\r\n  const [isException, setExceptionStatus] = useState(false);\r\n  const {\r\n    isOpen: isDrawerOpen,\r\n    onOpen: onDrawerOpen,\r\n    onClose: onDrawerClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    isOpen: isGitModalOpen,\r\n    onOpen: onGitModalOpen,\r\n    onClose: onGitModalClose,\r\n  } = useDisclosure();\r\n\r\n  const btnRef = React.useRef();\r\n  const [iteration, setIteration] = useState(0);\r\n  const [provid, setProvid] = useState(\"\");\r\n  const [modul, setModul] = useState(\"\");\r\n  const [resour, setResour] = useState(\"\");\r\n  const [obj, setObj] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const [executingTemplate, setExecuting] = useState(false);\r\n  const body = useSelector((state) => state.datacenter.data);\r\n  const importent = useSelector((state) => state.datacenter.important);\r\n  const tables = useSelector((state) => state.datacenter.resourse);\r\n  const attr_data = useSelector((state) => state.datacenter.attributes);\r\n  const edit_data = useSelector((state) => state.datacenter.editData);\r\n  const custom_code_tables = useSelector(\r\n    (state) => state.datacenter.editCustomData\r\n  );\r\n  const editorStatus = useSelector(\r\n    (state) => state.datacenter.customCodeResourceStatus\r\n  );\r\n  const custom = useSelector((state) => state.datacenter.customCodeData);\r\n  const resourceNodes = useSelector((state) => state.datacenter.resourceNodes);\r\n  const moduleNodes = useSelector((state) => state.datacenter.moduleNodes);\r\n  const curr_node_data = useSelector(\r\n    (state) => state.datacenter.currentNodeActive\r\n  );\r\n  const selectedNode = useSelector((state) => state.datacenter.selectedNode);\r\n  const template_name = useSelector(\r\n    (state) => state.templateDataSlice.template_name\r\n  );\r\n  const language_option = useSelector(\r\n    (state) => state.templateDataSlice.language\r\n  );\r\n\r\n  const region_option = useSelector(\r\n    (state) => state.templateDataSlice.region\r\n  );\r\n\r\n\r\n  const template_desc = useSelector(\r\n    (state) => state.templateDataSlice.template_desc\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [providerNames, setProviders] = useState([]);\r\n  const [modulesNames, setModules] = useState([]);\r\n  const [typeNames, setTypenames] = useState([]);\r\n  const [resourcesNames, setResourses] = useState([]);\r\n  const [selectTemplate, setTemplate] = useState(false);\r\n  const [selectProvider, setProvider] = useState(false);\r\n  const [selectModule, setModule] = useState(false);\r\n  const [selectObject, setObject] = useState(false);\r\n  const [selectType, setTypes] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n  const [isValidTemplate, setTemplateValid] = useState(false);\r\n  const [isValidProject, setProjectValid] = useState(false);\r\n  const [isValidRole, setRoleValid] = useState(false);\r\n  const [isValidObject, setObjectValid] = useState(false);\r\n  const [isAccessTokenValid, setAccessTokenValid] = useState(false);\r\n  const [isRepoNameValid, setRepoNameValid] = useState(false);\r\n  const [isMessagevalid, setMessageValid] = useState(false);\r\n  const [objectExist, setObjectExist] = useState(false);\r\n  const [checkin, setCheckIn] = useState(false);\r\n  const [fieldsCheck, setFiedlsCheck] = useState(false);\r\n  const [saved, setSaved] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const [isExistingTemplate, setExistingTemplate] = useState(false);\r\n  const [isBranchValid, setBranchValid] = useState(false);\r\n  const template = useRef();\r\n  const templateDescription = useRef();\r\n  const project_name = useRef();\r\n  const role_name = useRef();\r\n  const object = useRef();\r\n  const accessToken = useRef();\r\n  const repoName = useRef();\r\n  const message = useRef();\r\n  const branch = useRef();\r\n  const save_template_name = useRef();\r\n  const [argumentData, setArgumentData] = useState();\r\n  const [attributeData, setAttributeData] = useState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [deleteTemplate, setDeleteTemplate] = useState(\"\");\r\n  const [executeTemplate, setExecutingTemplateName] = useState(\"\");\r\n  const [modalData, setModalData] = useState();\r\n  const [variableArguments, setVariableArguments] = useState([]);\r\n  const itemsRef = useRef([]);\r\n  const [region, setRegion] = useState(\"\");\r\n  const [regionNames, setRegionName] = useState([]);\r\n  const [is_aws, setIsAws] = useState(false);\r\n  const [isTemplatePanelOpen, setTemplatePanelOpen] = useState(true);\r\n  const [customModuleSwitch, setCustomModuleSwitch] = useState(false);\r\n  const [customModule, setCustomModule] = useState(\"\");\r\n  const [customModules, setCustomModules] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  const { project } = state;\r\n\r\n  const {\r\n    reactFlowWrapper,\r\n    nodes,\r\n    setNodes,\r\n    edges,\r\n    setEdges,\r\n    reactFlowInstance,\r\n    setReactFlowInstance,\r\n    nodeData,\r\n    setNodeData,\r\n    isDeleteOpen,\r\n    setIsOpen,\r\n    position,\r\n    setPosition,\r\n    nodeDisplay,\r\n    setNodeDisplay,\r\n    currNodeSelected,\r\n    setCurrNodeSelected,\r\n    onConnect,\r\n    handleMouseEnter,\r\n    deleteNode,\r\n    onDragOver,\r\n    onNodeClick,\r\n    onContextMenu,\r\n    onEdgeUpdate,\r\n    addNode,\r\n    onNodesChange,\r\n    onEdgesChange,\r\n    onDrop,\r\n    onNodeDrag,\r\n  } = useResourceNode();\r\n\r\n  const chooseRegions = () => {\r\n    const regions = [\r\n      \"us-east-2\",\r\n      \"us-east-1\",\r\n      \"us-west-1\",\r\n      \"us-west-2\",\r\n      \"af-south-1\",\r\n      \"ap-east-1\",\r\n      \"ap-southeast-3\",\r\n      \"ap-south-1\",\r\n      \"ap-northeast-3\",\r\n      \"ap-northeast-2\",\r\n      \"ap-southeast-1\",\r\n      \"ap-southeast-2\",\r\n      \"ap-northeast-1\",\r\n      \"ca-central-1\",\r\n      \"eu-central-1\",\r\n      \"eu-west-1\",\r\n      \"eu-west-2\",\r\n      \"eu-south-1\",\r\n      \"eu-west-3\",\r\n      \"eu-north-1\",\r\n      \"me-south-1\",\r\n      \"sa-east-1\",\r\n      \"us-gov-east-1\",\r\n      \"us-gov-west-1\",\r\n    ];\r\n    let region_list = [];\r\n    for (const ele of regions) {\r\n      region_list.push({ id: ele, value: ele });\r\n    }\r\n    setRegionName(region_list);\r\n  };\r\n\r\n  const setProviderValue = (value) => {\r\n    console.log(value, \"value\");\r\n    if (value == \"aws\") {\r\n      setIsAws(true);\r\n    } else {\r\n      setIsAws(false);\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = () => setTemplatePanelOpen(!isTemplatePanelOpen);\r\n\r\n  const createWorkflow = () => {\r\n    console.log(\"WOrk flow\");\r\n  };\r\n\r\n  async function addModules(module_name) {\r\n    dispatch(actions.addToModuleNodes(module_name));\r\n  }\r\n\r\n  const fetchCustomModules = async () => {\r\n    const modules_response_data = await AxiosInstance.get(\"/listModules\");\r\n\r\n    const modules = modules_response_data.data;\r\n\r\n    const display_modules_list = modules.map((ele) => {\r\n      return { id: ele.module_name, value: ele.module_name };\r\n    });\r\n\r\n    setCustomModules(display_modules_list);\r\n  };\r\n\r\n  const removeCustomModules = () => {\r\n    dispatch(actions.clearState());\r\n\r\n    setNodes([]);\r\n    setEdges([]);\r\n  };\r\n\r\n  function is_variable(argument_name, obj_name, is_child) {\r\n    if (!is_child) {\r\n      for (const hide_ele in hidding) {\r\n        if (hidding[hide_ele][\"object_name\"] == obj_name) {\r\n          for (const argument in hidding[hide_ele][\"Arguments\"]) {\r\n            if (typeof hidding[hide_ele][\"Arguments\"][argument] == \"boolean\") {\r\n              if (argument == argument_name) {\r\n                if (hidding[hide_ele][\"Arguments\"][argument_name] == true) {\r\n                  return true;\r\n                } else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (const hide_ele in hidding) {\r\n        if (hidding[hide_ele][\"object_name\"] == obj_name) {\r\n          for (const argument in hidding[hide_ele][\"Arguments\"]) {\r\n            if (typeof hidding[hide_ele][\"Arguments\"][argument] != \"boolean\") {\r\n              for (const sub_attr in hidding[hide_ele][\"Arguments\"][argument]) {\r\n                if (sub_attr == argument_name) {\r\n                  if (\r\n                    hidding[hide_ele][\"Arguments\"][argument][sub_attr] == true\r\n                  ) {\r\n                    return true;\r\n                  } else {\r\n                    return false;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function find_in_attributes(name) {\r\n    for (let index = 0; index < attributeData[0].length; index++) {\r\n      if (name == attributeData[0][index][\"Attribute_Name\"]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async function checkingin() {\r\n    const response = await fetch(\r\n      \"https://yop1tosnw2.execute-http://localhost:5000.us-east-1.amazonaws.com/default/terraform_template\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          id: \"validate\",\r\n          AccessToken: accessToken.current.value,\r\n          repo: repoName.current.value,\r\n          Message: message.current.value,\r\n          branch: branch.current.value,\r\n          filename: template_name,\r\n          edit: \"yes\",\r\n          provider: provid.toLowerCase(),\r\n        }),\r\n      }\r\n    );\r\n    if (response.status == 200) {\r\n      const data = response.data;\r\n      setChecked(true);\r\n    } else {\r\n      const data = response.data;\r\n      if (data.message == undefined) {\r\n        setException(data);\r\n      } else {\r\n        setException(data.message);\r\n      }\r\n      setExceptionStatus(true);\r\n    }\r\n  }\r\n\r\n  const getEditedCustomResources = () => {\r\n    const elements = [];\r\n    for (const i of editorStatus) {\r\n      let flag = false;\r\n      for (const ele of body) {\r\n        if (ele.object_name === i.object_name) {\r\n          flag = true;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        elements.push(i.object_name);\r\n      }\r\n    }\r\n    const ele_objects = elements.map((ele) => {\r\n      const customDataCall = getEditedCustomData(ele);\r\n      return {\r\n        resource: customDataCall[\"resource\"],\r\n        object_name: ele,\r\n        custom_code: customDataCall[\"custom_code\"],\r\n      };\r\n    });\r\n    return ele_objects;\r\n  };\r\n\r\n  const hasCustomCode = (obj) => {\r\n    for (const i of editorStatus) {\r\n      if (i.object_name === obj) {\r\n        return i.status;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleWorkflowClick = () => {\r\n    setNodeDisplay(false);\r\n    setCurrNodeSelected(\"\");\r\n  };\r\n\r\n  const getEditedCustomData = (obj) => {\r\n    for (const i of custom_code_tables) {\r\n      if (i.object_name === obj) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCustomData = (obj) => {\r\n    for (const i of custom) {\r\n      if (i.object_name === obj) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  async function selectingArguments(template_name){\r\n    let flag = 0;\r\n    let valueBody = [];\r\n    const edited_resources = getEditedCustomResources();\r\n    const custom_code_arr = [...edited_resources];\r\n\r\n    const modulesList = moduleNodes.map((ele) => ele.id);\r\n\r\n    console.log(selectVariables());\r\n    if (selectVariables().length != 0) {\r\n      setVariablesExistance(true);\r\n      const variable_arguments = selectVariables();\r\n      setVariableArguments(variable_arguments);\r\n    } else {\r\n      setVariablesExistance(false);\r\n      setVariableArguments({});\r\n    }\r\n    console.log(\"Body New \", body, importent);\r\n    for (let a = 0; a < body.length; a++) {\r\n      if (hasCustomCode(body[a][\"object_name\"])) {\r\n        continue;\r\n      }\r\n\r\n      for (const b in importent[a][\"Arguments\"]) {\r\n        if (importent[a][\"Arguments\"][b] == \"\") {\r\n          if (body[a][\"Arguments\"][b].value == \"\") {\r\n            flag = 1;\r\n            break;\r\n          }\r\n        } else {\r\n          for (const c in importent[a][\"Arguments\"][b]) {\r\n            if (body[a][\"Arguments\"][b][c].value != undefined) {\r\n              if (body[a][\"Arguments\"][b][c].value == \"\") {\r\n                flag = 1;\r\n                break;\r\n              }\r\n            } else {\r\n              console.log(\"Undefined\", body[a][\"Arguments\"][b][c].value);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (flag == 0) {\r\n      selectVariables();\r\n      console.log(\"body\", body);\r\n\r\n      for (const a of body) {\r\n        if (hasCustomCode(a[\"object_name\"])) {\r\n          const customDataCall = getCustomData(a[\"object_name\"]);\r\n\r\n          const custom_args = {\r\n            resource: customDataCall[\"resource\"],\r\n            object_name: a[\"object_name\"],\r\n            custom_code: customDataCall[\"custom_code\"],\r\n          };\r\n          custom_code_arr.push(custom_args);\r\n          continue;\r\n        }\r\n\r\n        valueBody.push({\r\n          module: a[\"module\"],\r\n          resource: a[\"resource\"],\r\n          object_name: a[\"object_name\"],\r\n          Resource_Type: a[\"Resource_type\"],\r\n          Arguments: {},\r\n          Attributes:\r\n            attr_data[a[\"object_name\"]] != undefined\r\n              ? attr_data[a[\"object_name\"]]\r\n              : [],\r\n        });\r\n\r\n        if (\r\n          Object.keys(a[\"Arguments\"]).length === 0 &&\r\n          edit_data[a[\"object_name\"]]\r\n        ) {\r\n          console.log(\"Found empty args\")\r\n          for(let ele of valueBody){\r\n            if (ele.object_name === a[\"object_name\"]){\r\n              ele.Arguments = edit_data[a[\"object_name\"]]\r\n            }\r\n          }\r\n          \r\n        }\r\n        for (const b in a[\"Arguments\"]) {\r\n          if (a[\"Arguments\"][b].value != undefined) {\r\n            if (a[\"Arguments\"][b].value != \"\") {\r\n              if (is_variable(b, a[\"object_name\"], false)) {\r\n                let temp = {\r\n                  value: a[\"Arguments\"][b].value,\r\n                  is_variable: true,\r\n                };\r\n                const temp_valBody = valueBody.map((ele) => {\r\n                  if (ele.object_name === a[\"object_name\"])\r\n                    ele[\"Arguments\"][b] = temp;\r\n                  return ele;\r\n                }, []);\r\n              } else {\r\n                let temp1 = {\r\n                  value: a[\"Arguments\"][b].value,\r\n                  is_variable: false,\r\n                };\r\n\r\n                const temp_valBody = valueBody.map((ele) => {\r\n                  if (ele.object_name === a[\"object_name\"])\r\n                    ele[\"Arguments\"][b] = temp1;\r\n                  return ele;\r\n                }, []);\r\n              }\r\n            }\r\n          } else {\r\n            let valBody_obj = valueBody.filter((ele) => {\r\n              return ele.object_name === a[\"object_name\"];\r\n            }, {});\r\n\r\n            valBody_obj = valBody_obj[0];\r\n            console.log(\"valBody_obj--->\", valBody_obj);\r\n\r\n            valBody_obj[\"Arguments\"][b] = {};\r\n            for (const c in a[\"Arguments\"][b]) {\r\n              if (\r\n                a[\"Arguments\"][b][c].value != undefined &&\r\n                a[\"Arguments\"][b][c].value != \"\"\r\n              ) {\r\n                let inner_flag = 0;\r\n                for (let index = 0; index < argumentData.length; index++) {\r\n                  if (argumentData[index][\"Arguments_Name\"] == b) {\r\n                    valBody_obj[\"Arguments\"] = b;\r\n                    inner_flag = 1;\r\n                    break;\r\n                  }\r\n                }\r\n                if (!inner_flag) {\r\n                  let var_string = a[\"Arguments\"][b][c];\r\n                  if (var_string.value != \"\") {\r\n                    valBody_obj[\"Arguments\"][b][c] = var_string;\r\n                  }\r\n                  //valueBody[a][\"Arguments\"][b][c]=var_string\r\n                }\r\n                /*if(Object.keys(child_temp).length!=0){\r\n                                    valueBody[a][\"Arguments\"][b] = child_temp;\r\n                                }*/\r\n              } else if (a[\"Arguments\"][b][c].value == undefined) {\r\n                let temp_dict = {};\r\n                for (const i in a[\"Arguments\"][b][c]) {\r\n                  if (\r\n                    i.value != undefined ||\r\n                    a[\"Arguments\"][b][c][i].value == \"\"\r\n                  ) {\r\n                    continue;\r\n                  } else {\r\n                    temp_dict[i] = a[\"Arguments\"][b][c][i];\r\n                  }\r\n                }\r\n\r\n                if (Object.keys(temp_dict).length != 0) {\r\n                  valBody_obj[\"Arguments\"][b][c] = temp_dict;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Edit template valuebody\", valueBody);\r\n\r\n      const updated_nodes = [];\r\n      for (const i of nodes) {\r\n        for (const j of resourceNodes) {\r\n          if (i.id === j.id) {\r\n            updated_nodes.push({\r\n              ...j,\r\n              position: { x: i.position.x, y: i.position.y },\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log({\r\n        provider: provid.toLowerCase(),\r\n        template_name: template_name,\r\n        template_desc: template_desc, //templateDescription.current.value,\r\n        data: moduleNodes.length > 0 ? [] : valueBody,\r\n        language: language_option.toLowerCase(),\r\n        region: region_option,\r\n        custom: custom_code_arr.length !== 0 ? true : false,\r\n        custom_data: custom_code_arr,\r\n        nodes: updated_nodes,\r\n        edges: edges,\r\n        project: project,\r\n        modules_save: moduleNodes.length > 0 ? true : false,\r\n        modulesList: modulesList,\r\n      });\r\n\r\n      const response = await AxiosInstance.post(\"/edittemplate\", {\r\n        provider: provid.toLowerCase(),\r\n        template_name: template_name,\r\n        template_desc: template_desc, //templateDescription.current.value,\r\n        data: moduleNodes.length > 0 ? [] : valueBody,\r\n        language: language_option,\r\n        region: region_option,\r\n        custom: custom_code_arr.length !== 0 ? true : false,\r\n        custom_data: custom_code_arr,\r\n        nodes: updated_nodes,\r\n        edges: edges,\r\n        project: project,\r\n        modules_save: moduleNodes.length > 0 ? true : false,\r\n        modulesList: modulesList,\r\n      });\r\n\r\n      if (response.status == 200) {\r\n        console.log(\"success\");\r\n        const data = response.data;\r\n        dispatch(updateTemplateSavedStatus(true));\r\n        toast({\r\n          title: \"Saved Successfully\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      } else {\r\n        dispatch(updateTemplateSavedStatus(false));\r\n        const data = response.data;\r\n        console.log(data);\r\n        if (data == undefined) {\r\n          setException(data);\r\n          console.log(data);\r\n        } else {\r\n          console.log(data.message);\r\n          setException(data.message);\r\n        }\r\n        setExceptionStatus(true);\r\n      }\r\n    } else {\r\n      console.log(\"fail\");\r\n      setErrorMessage(true);\r\n    }\r\n  }\r\n\r\n  async function selectingModule(e) {\r\n    setLoading(true);\r\n    const response = await AxiosInstance.post(\"/template\", {\r\n      id: \"module\",\r\n      provider: e.toLowerCase(),\r\n    });\r\n    const data = response.data;\r\n    const modulesList = [];\r\n    for (const a of data) {\r\n      modulesList.push({ id: a, value: a });\r\n    }\r\n    setModules(modulesList);\r\n    setLoading(false);\r\n    setResourses([]);\r\n    setModul(\"\");\r\n    setResour(\"\");\r\n  }\r\n  async function selectingResourses(e) {\r\n    setLoading(true);\r\n    const response = await AxiosInstance.post(\"/template\", {\r\n      id: \"resource\",\r\n      provider: provid.toLowerCase(),\r\n      type: e,\r\n      modulename: modul,\r\n    });\r\n\r\n    const data = response.data;\r\n    const resoursesList = [];\r\n    for (const i of data) {\r\n      resoursesList.push({ id: i, value: i });\r\n    }\r\n    setResourses(resoursesList);\r\n    setLoading(false);\r\n    setResour(\"\");\r\n  }\r\n\r\n  async function submitHandler(r, m, t, o, p) {\r\n    setLoading(true);\r\n    dispatch(actions.addNewResourceNode([o, o, r]));\r\n    dispatch(initTableData(o));\r\n    const arguments_response = await AxiosInstance.post(\"/template\", {\r\n      id: \"arguments\",\r\n      provider: p.toLowerCase(),\r\n      modulename: m,\r\n      type: t,\r\n      resourcename: r,\r\n    });\r\n\r\n    const attributes_response = await AxiosInstance.post(\"/template\", {\r\n      id: \"attributes\",\r\n      provider: p.toLowerCase(),\r\n      modulename: m,\r\n      type: t,\r\n      resourcename: r,\r\n    });\r\n\r\n    const attributes_data = attributes_response.data;\r\n    const arguments_data = arguments_response.data;\r\n\r\n    setArgumentData(arguments_data);\r\n    setAttributeData(attributes_data);\r\n    console.log(arguments_response,'arguments_data')\r\n    arguments_data[1] = r;\r\n    arguments_data[2] = o;\r\n    setLoading(false);\r\n    dispatch(actions.addingNew([m, r, o, t]));\r\n    dispatch(actions.createHide([m, r, o]));\r\n    dispatch(actions.addingImportantNew([m, r, o]));\r\n    dispatch(actions.createDeleteList(o));\r\n    dispatch(actions.createNewTableData(o));\r\n    dispatch(actions.createAttrDeleteList(o));\r\n    dispatch(\r\n      actions.addNewResourse([\r\n        temp.current,\r\n        [temp.current, arguments_data, true, attributes_data],\r\n      ])\r\n    );\r\n    temp.current = temp.current + 1;\r\n\r\n    setProvid(p.toLowerCase());\r\n    setModul(\"\");\r\n    setResour(\"\");\r\n    setType(\"\");\r\n    setModules([]);\r\n    setProviders([]);\r\n    setTypenames([]);\r\n    setResourses([]);\r\n    selectingModule(p);\r\n  }\r\n\r\n  async function templateValidation() {\r\n    const name = template_name;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setTemplateValid(true);\r\n    } else {\r\n      setTemplateValid(false);\r\n      const response = await AxiosInstance.post(\"/validation\", {\r\n        template_name: template_name,\r\n      });\r\n      const data = response.data;\r\n      console.log(\"Data----------->\", data);\r\n      if (data == \"Failed\") {\r\n        setExistingTemplate(true);\r\n      } else {\r\n        setExistingTemplate(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectValidation() {\r\n    const name = project_name.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setProjectValid(true);\r\n    } else {\r\n      setProjectValid(false);\r\n    }\r\n  }\r\n\r\n  function roleValidation() {\r\n    const name = role_name.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setRoleValid(true);\r\n    } else {\r\n      setRoleValid(false);\r\n    }\r\n  }\r\n\r\n  function clearObjName() {\r\n    object.current.value = \"\";\r\n  }\r\n\r\n  function objectValidation() {\r\n    const name = object.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    let flag1 = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    for (const a of body) {\r\n      if (a[\"object_name\"] == name) {\r\n        flag1 = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag1 == 1) {\r\n      setObjectExist(true);\r\n    } else {\r\n      setObjectExist(false);\r\n    }\r\n    if (object.current.value == \"\") {\r\n      setProviders([]);\r\n    }\r\n\r\n    if (flag != 0) {\r\n      setObjectValid(true);\r\n    } else {\r\n      setObjectValid(false);\r\n      setObj(object.current.value);\r\n      if (object.current.value != \"\") {\r\n        setProviders([\r\n          { id: \"AWS\", value: \"AWS\" },\r\n          { id: \"GCP\", value: \"GCP\" },\r\n          { id: \"AZURE\", value: \"Azure\" },\r\n          { id: \"SNOWFLAKE\", value: \"Snowflake\" },\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function accessTokenValidation() {\r\n    const name = accessToken.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setAccessTokenValid(true);\r\n    } else {\r\n      setAccessTokenValid(false);\r\n    }\r\n  }\r\n  function repoNameValidation() {\r\n    const name = repoName.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setRepoNameValid(true);\r\n    } else {\r\n      setRepoNameValid(false);\r\n    }\r\n  }\r\n  function branchValidation() {\r\n    const name = branch.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setBranchValid(true);\r\n    } else {\r\n      setBranchValid(false);\r\n    }\r\n  }\r\n  function messageValidation() {\r\n    const name = message.current.value;\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,. \";\r\n    let flag = 0;\r\n    for (const a of name) {\r\n      if (!characters.includes(a)) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag != 0) {\r\n      setMessageValid(true);\r\n    } else {\r\n      setMessageValid(false);\r\n    }\r\n  }\r\n\r\n  const getSubArgumentValue = (\r\n    level_1_name,\r\n    argument_name,\r\n    child,\r\n    obj_name,\r\n    is_child\r\n  ) => {\r\n    for (const body_ele in body) {\r\n      if (body[body_ele][\"object_name\"] == obj_name) {\r\n        for (const argument in body[body_ele][\"Arguments\"]) {\r\n          if (argument == level_1_name) {\r\n            for (const arg in body[body_ele][\"Arguments\"][argument]) {\r\n              if (arg == argument_name) {\r\n                return body[body_ele][\"Arguments\"][argument][arg][child].value;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getArgumentValue = (argument_name, obj_name, is_child) => {\r\n    if (!is_child) {\r\n      for (const body_ele in body) {\r\n        if (body[body_ele][\"object_name\"] == obj_name) {\r\n          for (const argument in body[body_ele][\"Arguments\"]) {\r\n            if (argument == argument_name) {\r\n              return body[body_ele][\"Arguments\"][argument_name].value;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (const body_ele in body) {\r\n        if (body[body_ele][\"object_name\"] == obj_name) {\r\n          for (const argument in body[body_ele][\"Arguments\"]) {\r\n            for (const sub_attr in body[body_ele][\"Arguments\"][argument]) {\r\n              if (sub_attr == argument_name) {\r\n                return body[body_ele][\"Arguments\"][argument][sub_attr].value;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectVariables = () => {\r\n    const variable_arguments = [];\r\n    console.log(hidding);\r\n    for (const i in hidding) {\r\n      console.log(hidding, hidding[i]);\r\n      for (const j in hidding[i][\"Arguments\"]) {\r\n        if (typeof hidding[i][\"Arguments\"][j] == \"boolean\") {\r\n          console.log(hidding, hidding[i]);\r\n          if (hidding[i][\"Arguments\"][j] == true) {\r\n            const value = getArgumentValue(j, hidding[i][\"object_name\"], false);\r\n            variable_arguments.push(value);\r\n          }\r\n        } else {\r\n          for (const child in hidding[i][\"Arguments\"][j]) {\r\n            if (typeof hidding[i][\"Arguments\"][j][child] == \"boolean\") {\r\n              if (hidding[i][\"Arguments\"][j][child] == true) {\r\n                const value = getArgumentValue(\r\n                  child,\r\n                  hidding[i][\"object_name\"],\r\n                  true\r\n                );\r\n                variable_arguments.push(value);\r\n              }\r\n            } else {\r\n              for (const sub_child in hidding[i][\"Arguments\"][j][child]) {\r\n                if (\r\n                  typeof hidding[i][\"Arguments\"][j][child][sub_child] ==\r\n                  \"boolean\"\r\n                ) {\r\n                  if (hidding[i][\"Arguments\"][j][child][sub_child] == true) {\r\n                    const value = getSubArgumentValue(\r\n                      j,\r\n                      child,\r\n                      sub_child,\r\n                      hidding[i][\"object_name\"],\r\n                      true\r\n                    );\r\n                    variable_arguments.push(value);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return variable_arguments;\r\n  };\r\n\r\n  async function executingscript(template_name) {\r\n    const temp_variables = handleVariableValues();\r\n    const response = await AxiosInstance.post(\"/script\", {\r\n      template_name: template_name,\r\n      variables: temp_variables,\r\n    });\r\n  }\r\n\r\n  const handleVariableValues = () => {\r\n    const final_variables = {};\r\n\r\n    let idx = 0;\r\n    for (const i of itemsRef.current) {\r\n      if (i != null) {\r\n        final_variables[variableArguments[idx++]] = i.value;\r\n      }\r\n    }\r\n    return final_variables;\r\n  };\r\n\r\n  async function editingTemplate(e) {\r\n    const response = await AxiosInstance.post(\"/gettemplate\", {\r\n      template_name: e,\r\n    });\r\n\r\n    const data = response.data;\r\n    console.log(\"edit data \", data);\r\n    if (data[0][\"custom_data\"]) {\r\n      console.log(\"Custom 1\");\r\n      for (const i of data[1][\"custom_data\"]) {\r\n        console.log(i);\r\n        dispatch(\r\n          actions.addCustomCodeForEdit([\r\n            i[\"object_name\"],\r\n            i[\"resource\"],\r\n            i[\"custom_code\"],\r\n          ])\r\n        );\r\n        dispatch(actions.modifyEditorStatus([i[\"object_name\"]]));\r\n      }\r\n    }\r\n\r\n    dispatch(updateTemplateSavedStatus(true));\r\n    dispatch(updateTemplateName(data[0][\"template_name\"]));\r\n    dispatch(updateTemplateDesc(data[0][\"template_desc\"]));\r\n    setProvid(data[0][\"provider\"]);\r\n\r\n    for (const i of data[0].nodes) {\r\n      //i.data.label = `${i.data.label} - ${i.id}`\r\n      console.log(\"node element\", i);\r\n      dispatch(\r\n        actions.addEditResourceNode([\r\n          i.id,\r\n          i.id,\r\n          i.data.label,\r\n          i.data.is_displayed,\r\n          i.position.x,\r\n          i.position.y,\r\n        ])\r\n      );\r\n    }\r\n\r\n    setNodes(data[0].nodes);\r\n    setEdges(data[0].edges);\r\n    //\r\n    //dispatch(actions.updateResourceNode([o]))\r\n\r\n    for (const a of data[0].data) {\r\n      const response = await AxiosInstance.post(\"/listtemplates\", {\r\n        project: project,\r\n      });\r\n      const data1 = response.data;\r\n\r\n      for (const b of data1) {\r\n        if (e == b.template_name) {\r\n          dispatch(updateTemplateName(b.template_name));\r\n          dispatch(updateTemplateDesc(b.template_desc));\r\n          //template.current.value = b.template_name;\r\n          //templateDescription.current.value = b.template_desc;\r\n          submitHandler(\r\n            a.resource,\r\n            a.module,\r\n            a.Resource_Type,\r\n            a.object_name,\r\n            b.provider\r\n          );\r\n          dispatch(\r\n            actions.addtoEditData([a.object_name, a.Arguments, a.Attributes])\r\n          );\r\n          dispatch(actions.addToEditVariables([a.object_name, a.Variables]));\r\n          dispatch(actions.createAttrDeleteList(a.object_name));\r\n          for (const attr of a.Attributes) {\r\n            dispatch(actions.addNewAttribute([a.object_name, attr]));\r\n          }\r\n          setProvid(b.provider);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (iteration == 0) {\r\n    setIteration(iteration + 1);\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(() => setExecuting(false), 3000);\r\n  }, [executingTemplate]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setSaved(false), 3000);\r\n  }, [saved]);\r\n  useEffect(() => {\r\n    setTimeout(() => setChecked(false), 3000);\r\n  }, [checked]);\r\n\r\n  useEffect(() => {\r\n    if (!initialRenderRef?.current) {\r\n      editingTemplate(params.name.slice(0));\r\n      initialRenderRef.current = true;\r\n      setIteration(2);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNodes(resourceNodes);\r\n  }, [resourceNodes]);\r\n\r\n  useEffect(() => {\r\n    setNodes(moduleNodes);\r\n  }, [moduleNodes]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setExceptionStatus(false), 3000);\r\n  }, [isException]);\r\n  return (\r\n    <div class=\"wrapper\">\r\n      <GitModal isOpen={isGitModalOpen} onClose={onGitModalClose} />\r\n      <TemplateModal\r\n        isOpen={isTemplateModalOpen}\r\n        onClose={onTemplateModalClose}\r\n      />\r\n      <>\r\n        <Modal\r\n          initialFocusRef={initialRef}\r\n          finalFocusRef={finalRef}\r\n          isOpen={variableIsOpen}\r\n          onClose={variableOnClose}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Enter Variable Values</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n              {variblesExistance &&\r\n                variableArguments.map((item, idx) => (\r\n                  <>\r\n                    <FormLabel>{item}</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      ref={(el) => (itemsRef.current[idx] = el)}\r\n                      placeholder=\"Enter Value\"\r\n                    />\r\n                  </>\r\n                ))}\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                mr={3}\r\n                onClick={() => {\r\n                  handleVariableValues();\r\n                  setExecuting(true);\r\n                  executingscript(executeTemplate);\r\n                  onClose();\r\n                  variableOnClose();\r\n                  toast({\r\n                    title: \"Execution Successfull!\",\r\n                    status: \"success\",\r\n                    duration: 3000,\r\n                    isClosable: true,\r\n                    position: \"bottom-left\",\r\n                  });\r\n                }}\r\n              >\r\n                Execute\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  variableOnClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n      <>\r\n        <Modal\r\n          initialFocusRef={initialRef}\r\n          finalFocusRef={finalRef}\r\n          isOpen={saveasIsOpen}\r\n          onClose={saveasOnClose}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Save</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n              <>\r\n                <FormLabel>Template Name</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  ref={save_template_name}\r\n                  placeholder=\"Enter template name\"\r\n                />\r\n              </>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                mr={3}\r\n                onClick={() => {\r\n                  //dispatch(updateTemplateName(save_template_name.current.value))\r\n                  selectingArguments(save_template_name.current.value);\r\n                  saveasOnClose();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  saveasOnClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n\r\n      <>\r\n        <Modal closeOnOverlayClick={false} isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>\r\n              {modalData == 0 && \"Delete Template\"}\r\n              {modalData == 1 && \"Execute Template\"}\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n              {modalData == 0 &&\r\n                \"Are you sure, you want to delete the template?\"}\r\n              {modalData == 1 &&\r\n                \"Are you sure, you want to execute the template?\"}\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button\r\n                colorScheme={\r\n                  (modalData == 0 && \"red\") || (modalData == 1 && \"blue\")\r\n                }\r\n                mr={3}\r\n                onClick={() => {\r\n                  if (modalData == 0) {\r\n                    onClose();\r\n                  } else {\r\n                    {\r\n                      if (variblesExistance) {\r\n                        VariableOnOpen();\r\n                      } else {\r\n                        setExecuting(true);\r\n                        executingscript(executeTemplate);\r\n                        toast({\r\n                          title: \"Execution Successfull!\",\r\n                          status: \"success\",\r\n                          duration: 3000,\r\n                          isClosable: true,\r\n                          position: \"bottom-left\",\r\n                        });\r\n                        onClose();\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                {modalData == 0 && \"Delete\"}\r\n                {modalData == 1 && \"Execute\"}\r\n              </Button>\r\n              <Button onClick={onClose}>Cancel</Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n      <>\r\n        <Drawer\r\n          isOpen={isDrawerOpen}\r\n          placement=\"left\"\r\n          onClose={onDrawerClose}\r\n          finalFocusRef={btnRef}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Create New Resource</DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <div\r\n                onClick={() => {\r\n                  if (template_name == \"\") {\r\n                    setTemplate(true);\r\n                  }\r\n                  setProvider(false);\r\n                }}\r\n              >\r\n                {selectTemplate && <p id=\"p1\">Please Enter Template Name</p>}\r\n                <DatalistInput\r\n                  placeholder=\"Select Provider\"\r\n                  value={provid}\r\n                  setValue={setProvid}\r\n                  label=\"Provider *\"\r\n                  className=\"datalist\"\r\n                  onSelect={(item) => {\r\n                    if (provid == \"\") {\r\n                      selectingModule(item.value.toLowerCase());\r\n                      setProvid(item.value.toLowerCase());\r\n                      setProviderValue(item.value.toLowerCase());\r\n                    }\r\n                  }}\r\n                  onChange={() => {\r\n                    if (tables.length != 0) {\r\n                      setProvid(provid);\r\n                    }\r\n                  }}\r\n                  items={providerNames}\r\n                />\r\n              </div>\r\n              <FormControl display=\"flex\" alignItems=\"center\">\r\n                <FormLabel htmlFor=\"custom-modules\" mb=\"0\">\r\n                  Use Custom Modules?\r\n                </FormLabel>\r\n                <Switch\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      fetchCustomModules();\r\n                    } else {\r\n                      removeCustomModules();\r\n                    }\r\n                    setCustomModuleSwitch(!customModuleSwitch);\r\n                  }}\r\n                  id=\"custom-modules\"\r\n                />\r\n              </FormControl>\r\n\r\n              {customModuleSwitch && (\r\n                <CustomDataListInput\r\n                  options={customModules}\r\n                  placeholder=\"Select Custom Module\"\r\n                  onSelect={(item) => {\r\n                    setCustomModule(item.toLowerCase());\r\n                    addModules(item);\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <div className=\"hide-divs\">\r\n                {isValidProject && <p id=\"p1\">Don't Use Special Characters</p>}\r\n                <label htmlFor=\"project\">Project</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  placeholder={\"Project Name\"}\r\n                  name=\"project\"\r\n                  onChange={projectValidation}\r\n                  ref={project_name}\r\n                ></input>\r\n              </div>\r\n\r\n              <div className=\"hide-divs\">\r\n                {isValidRole && <p id=\"p1\">Don't Use Special Characters</p>}\r\n                <label htmlFor=\"role\">Role Name</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  placeholder={\"Eg.Manager\"}\r\n                  name=\"role\"\r\n                  onChange={roleValidation}\r\n                  ref={role_name}\r\n                ></input>\r\n              </div>\r\n\r\n              <div\r\n                onClick={() => {\r\n                  if (provid == \"\") {\r\n                    setProvider(true);\r\n                  }\r\n                  setModule(false);\r\n                }}\r\n              >\r\n                {selectProvider && <p id=\"p1\">Please Select Provider</p>}\r\n                <DatalistInput\r\n                  placeholder=\"Select Module\"\r\n                  value={modul}\r\n                  setValue={setModul}\r\n                  label=\"Module *\"\r\n                  className=\"datalist\"\r\n                  onSelect={(item) => {\r\n                    setModul(item.value);\r\n                    setTypenames([\r\n                      { id: \"Resource\", value: \"Resource\" },\r\n                      { id: \"Data Source\", value: \"Data Source\" },\r\n                    ]);\r\n                  }}\r\n                  items={modulesNames}\r\n                />\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  if (modul == \"\") {\r\n                    setModule(true);\r\n                  }\r\n                  setTypes(false);\r\n                }}\r\n              >\r\n                {selectModule && <p id=\"p1\">Please Select Module</p>}\r\n                <DatalistInput\r\n                  placeholder=\"Select Type\"\r\n                  value={type}\r\n                  setValue={setType}\r\n                  label=\"Type *\"\r\n                  className=\"datalist\"\r\n                  onSelect={(item) => {\r\n                    setType(item.value);\r\n                    selectingResourses(item.value);\r\n                    chooseRegions();\r\n                  }}\r\n                  items={typeNames}\r\n                />\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  if (template_name == \"\") {\r\n                    setObject(true);\r\n                  }\r\n                }}\r\n              >\r\n                {isValidObject && <p id=\"p1\">Don't Use Special Characters</p>}\r\n                {selectObject && <p id=\"p1\">Please Enter Template Name</p>}\r\n                {object == \"\" && (\r\n                  <p id=\"p1\">Object Name Null, Please fill it</p>\r\n                )}\r\n                {objectExist && (\r\n                  <p id=\"p1\">Object Name Already Exists, Please Try Another</p>\r\n                )}\r\n                <label htmlFor=\"objectName\">Service Name * </label>\r\n                <input\r\n                  type={\"text\"}\r\n                  placeholder={\"Object Name\"}\r\n                  name=\"objectName\"\r\n                  ref={object}\r\n                  onChange={() => {\r\n                    if (template_name == \"\") {\r\n                      object.current.value = \"\";\r\n                    } else {\r\n                      objectValidation();\r\n                    }\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  if (type == \"\") {\r\n                    setTypes(true);\r\n                  }\r\n                }}\r\n              >\r\n                {selectType && <p>Please Select Type</p>}\r\n                {is_aws && (\r\n                  <DatalistInput\r\n                    placeholder=\"Select Region1\"\r\n                    value={region}\r\n                    label=\"Region *\"\r\n                    setValue={setRegion}\r\n                    className=\"datalist\"\r\n                    onSelect={(item) => {\r\n                      //setRegion(item.value);\r\n                      dispatch(updateRegion(item.value));\r\n                    }}\r\n                    items={regionNames}\r\n                  />\r\n                )}\r\n\r\n                <DatalistInput\r\n                  placeholder=\"Select Resourse\"\r\n                  value={resour}\r\n                  setValue={setResour}\r\n                  label=\"Resourse *\"\r\n                  className=\"datalist\"\r\n                  id=\"resourceList\"\r\n                  onSelect={(item) => {\r\n                    setResour(item.value);\r\n                  }}\r\n                  items={resourcesNames}\r\n                />\r\n              </div>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter>\r\n              <Button variant=\"outline\" mr={3} onClick={onDrawerClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                onClick={() => {\r\n                  submitHandler(resour, modul, type, obj, provid);\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </>\r\n      {/* <div style={{ position: \"relative\", zIndex: 1000 }}>\r\n        <div\r\n          className=\"new-template-div\"\r\n          id=\"div2\"\r\n          style={{\r\n            zIndex: -1,\r\n            transition: \"all 0.5s\",\r\n            transform: isTemplatePanelOpen\r\n              ? \"translateX(0%)\"\r\n              : \"translateX(-100%)\",\r\n            width: isTemplatePanelOpen ? \"25%\" : \"0%\",\r\n          }}\r\n        >\r\n          <div id=\"upload-btn\">\r\n            {location.pathname != \"/templates/existingTemplate\" && (\r\n              <button>Upload</button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => {\r\n              setTemplate(false);\r\n              setObject(false);\r\n              setTemplate(false);\r\n            }}\r\n          >\r\n            {isValidTemplate && <p id=\"p1\">Don't Use Special Characters</p>}\r\n            {isExistingTemplate && <p id=\"p1\">Template Name Already Exists</p>}\r\n            <label htmlFor=\"template\">Template Name * </label>\r\n            <input\r\n              type={\"text\"}\r\n              placeholder={\"Template Name\"}\r\n              name=\"template\"\r\n              onChange={templateValidation}\r\n              ref={template}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label>Template Description</label>\r\n            <textarea ref={templateDescription} rows={\"3\"}></textarea>\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => {\r\n              if (template.current.value == \"\") {\r\n                setTemplate(true);\r\n              }\r\n              setProvider(false);\r\n            }}\r\n          >\r\n            {selectTemplate && <p id=\"p1\">Please Enter Template Name</p>}\r\n            <DatalistInput\r\n              placeholder=\"Select Provider\"\r\n              value={provid}\r\n              setValue={setProvid}\r\n              label=\"Provider *\"\r\n              className=\"datalist\"\r\n              onSelect={(item) => {\r\n                if (provid == \"\") {\r\n                  selectingModule(item.value.toLowerCase());\r\n                  setProvid(item.value.toLowerCase());\r\n                  setProviderValue(item.value.toLowerCase());\r\n                }\r\n              }}\r\n              onChange={() => {\r\n                if (tables.length != 0) {\r\n                  setProvid(provid);\r\n                }\r\n              }}\r\n              items={providerNames}\r\n            />\r\n          </div>\r\n          <FormControl display=\"flex\" alignItems=\"center\">\r\n            <FormLabel htmlFor=\"custom-modules\" mb=\"0\">\r\n              Use Custom Modules?\r\n            </FormLabel>\r\n            <Switch\r\n              onChange={(e) => {\r\n                if (e.target.checked) {\r\n                  fetchCustomModules();\r\n                } else {\r\n                  removeCustomModules();\r\n                }\r\n                setCustomModuleSwitch(!customModuleSwitch);\r\n              }}\r\n              id=\"custom-modules\"\r\n            />\r\n          </FormControl>\r\n\r\n          {customModuleSwitch && (\r\n            <CustomDataListInput\r\n              options={customModules}\r\n              placeholder=\"Select Custom Module\"\r\n              onSelect={(item) => {\r\n                setCustomModule(item.toLowerCase());\r\n                addModules(item);\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {!customModuleSwitch && (\r\n            <button\r\n              ref={btnRef}\r\n              onClick={onDrawerOpen}\r\n              className=\"add-rsrc-btn\"\r\n            >\r\n              Add Resource\r\n            </button>\r\n          )}\r\n        </div>\r\n        <span\r\n          className=\"template_panel-controller-span\"\r\n          onClick={toggleDrawer}\r\n          style={{\r\n            transition: \"all 0.5s\",\r\n            transform: isTemplatePanelOpen\r\n              ? \"translateX(0%)\"\r\n              : \"translateX(-110%)\",\r\n            zIndex: 1,\r\n          }}\r\n        >\r\n          {isTemplatePanelOpen ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </span>\r\n      </div> */}\r\n      {/* <div className=\"new-template-div\" id=\"div2\">\r\n        <div id=\"upload-btn\">\r\n          location.pathname!='/templates/existingTemplate'&&<button>Upload</button>\r\n        </div>\r\n\r\n        <div\r\n          onClick={() => {\r\n            setTemplate(false);\r\n            setObject(false);\r\n            setTemplate(false);\r\n          }}\r\n        >\r\n          {isValidTemplate && <p id=\"p1\">Don't Use Special Characters</p>}\r\n          {isExistingTemplate && <p id=\"p1\">Template Name Already Exists</p>}\r\n          <label htmlFor=\"template\">Template Name * </label>\r\n          <input\r\n            type={\"text\"}\r\n            placeholder={\"Template Name\"}\r\n            name=\"template\"\r\n            onChange={templateValidation}\r\n            ref={template}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label>Template Description</label>\r\n          <textarea ref={templateDescription} rows={\"3\"}></textarea>\r\n        </div>\r\n        <div className=\"hide-divs\">\r\n          {isValidProject && <p id=\"p1\">Don't Use Special Characters</p>}\r\n          <label htmlFor=\"project\">Project</label>\r\n          <input\r\n            type={\"text\"}\r\n            placeholder={\"Eg.My Project\"}\r\n            name=\"project\"\r\n            onChange={projectValidation}\r\n            ref={project_name}\r\n          ></input>\r\n        </div>\r\n        <div className=\"hide-divs\">\r\n          {isValidRole && <p id=\"p1\">Don't Use Special Characters</p>}\r\n          <label htmlFor=\"role\">Role Name</label>\r\n          <input\r\n            type={\"text\"}\r\n            placeholder={\"Eg.Manager\"}\r\n            name=\"role\"\r\n            onChange={roleValidation}\r\n            ref={role_name}\r\n          ></input>\r\n        </div>\r\n\r\n        <div\r\n          onClick={() => {\r\n            if (template.current.value == \"\") {\r\n              setTemplate(true);\r\n            }\r\n            setProvider(false);\r\n          }}\r\n        >\r\n          {selectTemplate && <p id=\"p1\">Please Enter Template Name</p>}\r\n          <DatalistInput\r\n            placeholder=\"Select Provider\"\r\n            value={provid.toUpperCase()}\r\n            setValue={setProvid}\r\n            label=\"Provider *\"\r\n            className=\"datalist\"\r\n            onSelect={(item) => {\r\n              if (provid == \"\") {\r\n                selectingModule(item.value.toLowerCase());\r\n                setProvid(item.value);\r\n              }\r\n            }}\r\n            onChange={() => {\r\n              if (tables.length != 0) {\r\n                setProvid(provid);\r\n              }\r\n            }}\r\n            items={providerNames}\r\n          />\r\n        </div>\r\n\r\n        <button ref={btnRef} onClick={onDrawerOpen} className=\"add-rsrc-btn\">\r\n          Add Resource\r\n        </button>\r\n      </div> */}\r\n\r\n      <div id=\"div3\">\r\n        {loading && <div class=\"loader\"></div>}\r\n        {saved && (\r\n          <Alert status=\"success\">\r\n            <AlertIcon />\r\n            Saved Successfully\r\n          </Alert>\r\n        )}\r\n        {errorMessage && (\r\n          <Alert status=\"error\">\r\n            <AlertIcon />\r\n            Please fill all required fields!\r\n          </Alert>\r\n        )}\r\n\r\n        {loading && <div class=\"loader\"></div>}\r\n        <div\r\n          className=\"options-panel-element\"\r\n          style={{\r\n            width: \"max-content\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            fontSize: \"18px\",\r\n            margin: \"0px 20px\",\r\n            position: \"absolute\",\r\n            background: \"white !important\",\r\n            zIndex: 100,\r\n          }}\r\n          onClick={onTemplateModalOpen}\r\n        >\r\n          <span style={{ fontSize: \"13px\", marginRight: \"3px\" }}>\r\n            {template_name}\r\n          </span>\r\n          <MdDriveFileRenameOutline />\r\n        </div>\r\n\r\n        <div\r\n          id=\"div4\"\r\n          onClick={() => {\r\n            setErrorMessage(false);\r\n          }}\r\n        >\r\n          {nodeDisplay && (\r\n            <button\r\n              style={{\r\n                background: \"#5e5ee4\",\r\n                color: \"white\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                marginTop: \"50px\",\r\n              }}\r\n              onClick={handleWorkflowClick}\r\n            >\r\n              <i class=\"fa-solid fa-arrow-left\"></i> Workflow\r\n            </button>\r\n          )}\r\n\r\n          {!nodeDisplay && (\r\n            <div className=\"dndflow\">\r\n              <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                  <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onConnect={onConnect}\r\n                    onInit={setReactFlowInstance}\r\n                    onDrop={onDrop}\r\n                    onNodeMouseEnter={handleMouseEnter}\r\n                    onDragOver={onDragOver}\r\n                    onNodeContextMenu={onContextMenu}\r\n                    onNodeClick={onNodeClick}\r\n                    onEdgeUpdate={onEdgeUpdate}\r\n                    onNodeDrag={onNodeDrag}\r\n                    fitView={false}\r\n                  >\r\n                    <ContextMenu\r\n                      isOpen={isDeleteOpen}\r\n                      onMouseLeave={() => setIsOpen(false)}\r\n                      position={position}\r\n                      actions={[\r\n                        { label: \"delete\", effect: deleteNode },\r\n                        {\r\n                          label: \"Edit Resource\",\r\n                          effect: () => console.log(\"none\"),\r\n                        },\r\n                      ]}\r\n                    />\r\n\r\n                    <Background />\r\n                    <Controls />\r\n                  </ReactFlow>\r\n                </div>\r\n              </ReactFlowProvider>\r\n            </div>\r\n          )}\r\n\r\n          {nodeDisplay &&\r\n            curr_node_data.map((data) => (\r\n              <EditTables\r\n                key={data[1][1]}\r\n                id={data[0]}\r\n                data={data[1]}\r\n                output_data={data[3]}\r\n              />\r\n            ))}\r\n\r\n          {console.log(custom_code_tables, selectedNode)}\r\n          {nodeDisplay &&\r\n            custom_code_tables.map((data) =>\r\n              selectedNode === data.object_name ? (\r\n                <EditCustomTable\r\n                  key={data[\"object_name\"]}\r\n                  object_name={data[\"object_name\"]}\r\n                  resource={data[\"resource\"]}\r\n                />\r\n              ) : null\r\n            )}\r\n        </div>\r\n        {checked && <p>Checked</p>}\r\n        {isException && <p>{exception}</p>}\r\n\r\n        <ButtonPanel\r\n          onClick={() => console.log(\"kk\")}\r\n          saveClick={() => selectingArguments(template_name)}\r\n          saveAsClick={() => saveasOnOpen()}\r\n          addResourceClick={onDrawerOpen}\r\n          gitClick={() => {\r\n            onGitModalOpen();\r\n          }}\r\n          executeClick={() => {\r\n            {\r\n              {\r\n                if (variblesExistance) {\r\n                  VariableOnOpen();\r\n                } else {\r\n                  onOpen();\r\n                }\r\n                setExecutingTemplateName(template_name);\r\n\r\n                setModalData(1);\r\n              }\r\n            }\r\n          }}\r\n          style={{ marginLeft: \"40% !important\" }}\r\n        />\r\n\r\n        {checkin &&\r\n          ReactDom.createPortal(\r\n            <div\r\n              id=\"backdrop\"\r\n              onClick={() => {\r\n                setCheckIn(false);\r\n              }}\r\n            />,\r\n            document.getElementById(\"root2\")\r\n          )}\r\n        {checkin &&\r\n          ReactDom.createPortal(\r\n            <div id=\"confirmForm\">\r\n              <h4>Git Check-In</h4>\r\n              <div>\r\n                {isAccessTokenValid && (\r\n                  <p id=\"p1\">Please Enter Valid Access Token</p>\r\n                )}\r\n                <label htmlFor=\"token\">Access Token *</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  name=\"token\"\r\n                  placeholder=\"Enter Access Token\"\r\n                  ref={accessToken}\r\n                  onChange={accessTokenValidation}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setFiedlsCheck(false);\r\n                }}\r\n              >\r\n                {isRepoNameValid && <p id=\"p1\">Please Enter Valid Repo Name</p>}\r\n                <label htmlFor=\"refoname\">Repo Name *</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  name=\"refoname\"\r\n                  placeholder=\"Enter Repo Name\"\r\n                  ref={repoName}\r\n                  onChange={repoNameValidation}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setFiedlsCheck(false);\r\n                }}\r\n              >\r\n                {isBranchValid && <p id=\"p1\">Please Enter Valid Branch</p>}\r\n                <label htmlFor=\"branch\">Branch *</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  name=\"branch\"\r\n                  placeholder=\"Enter Branch\"\r\n                  ref={branch}\r\n                  onChange={branchValidation}\r\n                ></input>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setFiedlsCheck(false);\r\n                }}\r\n              >\r\n                {isMessagevalid && <p id=\"p1\">Please Enter Valid Message</p>}\r\n                <label htmlFor=\"message\">Message</label>\r\n                <input\r\n                  type={\"text\"}\r\n                  name=\"message\"\r\n                  placeholder=\"Enter Message\"\r\n                  ref={message}\r\n                  onChange={messageValidation}\r\n                ></input>\r\n              </div>\r\n              {fieldsCheck && <p id=\"p1\">Please Fill All Required Fields(*)</p>}\r\n              <button\r\n                onClick={() => {\r\n                  setCheckIn(false);\r\n                }}\r\n              >\r\n                cancel\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  if (\r\n                    accessToken.current.value != \"\" &&\r\n                    repoName.current.value != \"\"\r\n                  ) {\r\n                    setCheckIn(false);\r\n                    checkingin();\r\n                  } else setFiedlsCheck(true);\r\n                }}\r\n              >\r\n                checkIn\r\n              </button>\r\n            </div>,\r\n            document.getElementById(\"root3\")\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(EditTemplate);\r\n"],"names":["EditTemplate","props","temp","useRef","params","useParams","window","onbeforeunload","initialRenderRef","hidding","useSelector","state","datacenter","hiding","initialRef","React","finalRef","toast","useToast","_useDisclosure","useDisclosure","saveasIsOpen","isOpen","saveasOnOpen","onOpen","saveasOnClose","onClose","_useDisclosure2","variableIsOpen","VariableOnOpen","variableOnClose","_useDisclosure3","isTemplateModalOpen","onTemplateModalOpen","onTemplateModalClose","_useState","useState","_useState2","_slicedToArray","variblesExistance","setVariablesExistance","_useState3","_useState4","exception","setException","_useState5","_useState6","isException","setExceptionStatus","_useDisclosure4","isDrawerOpen","onDrawerOpen","onDrawerClose","_useDisclosure5","isGitModalOpen","onGitModalOpen","onGitModalClose","btnRef","_useState7","_useState8","iteration","setIteration","_useState9","_useState10","provid","setProvid","_useState11","_useState12","modul","setModul","_useState13","_useState14","resour","setResour","_useState15","_useState16","obj","setObj","_useState17","_useState18","type","setType","_useState19","_useState20","executingTemplate","setExecuting","body","data","importent","important","tables","resourse","attr_data","attributes","edit_data","editData","custom_code_tables","editCustomData","editorStatus","customCodeResourceStatus","custom","customCodeData","resourceNodes","moduleNodes","curr_node_data","currentNodeActive","selectedNode","template_name","templateDataSlice","language_option","language","region_option","region","template_desc","dispatch","useDispatch","_useState21","_useState22","loading","setLoading","_useState23","_useState24","providerNames","setProviders","_useState25","_useState26","modulesNames","setModules","_useState27","_useState28","typeNames","setTypenames","_useState29","_useState30","resourcesNames","setResourses","_useState31","_useState32","selectTemplate","setTemplate","_useState33","_useState34","selectProvider","setProvider","_useState35","_useState36","selectModule","setModule","_useState37","_useState38","selectObject","setObject","_useState39","_useState40","selectType","setTypes","_useState41","_useState42","errorMessage","setErrorMessage","_useState43","_useState44","_useState45","_useState46","isValidProject","setProjectValid","_useState47","_useState48","isValidRole","setRoleValid","_useState49","_useState50","isValidObject","setObjectValid","_useState51","_useState52","isAccessTokenValid","setAccessTokenValid","_useState53","_useState54","isRepoNameValid","setRepoNameValid","_useState55","_useState56","isMessagevalid","setMessageValid","_useState57","_useState58","objectExist","setObjectExist","_useState59","_useState60","checkin","setCheckIn","_useState61","_useState62","fieldsCheck","setFiedlsCheck","_useState63","_useState64","saved","setSaved","_useState65","_useState66","checked","setChecked","_useState67","_useState68","_useState69","_useState70","isBranchValid","setBranchValid","project_name","role_name","object","accessToken","repoName","message","branch","save_template_name","_useState71","_useState72","argumentData","setArgumentData","_useState73","_useState74","setAttributeData","_useDisclosure6","_useState75","_useState76","_useState77","_useState78","executeTemplate","setExecutingTemplateName","_useState79","_useState80","modalData","setModalData","_useState81","_useState82","variableArguments","setVariableArguments","itemsRef","_useState83","_useState84","setRegion","_useState85","_useState86","regionNames","setRegionName","_useState87","_useState88","is_aws","setIsAws","_useState89","_useState90","_useState91","_useState92","customModuleSwitch","setCustomModuleSwitch","_useState93","_useState94","setCustomModule","_useState95","_useState96","customModules","setCustomModules","project","useLocation","_useResourceNode","useResourceNode","reactFlowWrapper","nodes","setNodes","edges","setEdges","setReactFlowInstance","reactFlowInstance","isDeleteOpen","nodeData","setNodeData","setIsOpen","position","nodeDisplay","setPosition","setNodeDisplay","setCurrNodeSelected","currNodeSelected","onConnect","handleMouseEnter","deleteNode","onDragOver","onNodeClick","onContextMenu","onEdgeUpdate","onNodesChange","addNode","onEdgesChange","onDrop","onNodeDrag","_addModules","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","module_name","wrap","_context2","prev","next","actions","addToModuleNodes","stop","apply","arguments","fetchCustomModules","_ref","_callee","modules_response_data","modules","display_modules_list","_context","AxiosInstance","get","sent","map","ele","id","value","is_variable","argument_name","obj_name","is_child","hide_ele","argument","sub_attr","_checkingin","_callee3","response","_data","_context3","fetch","method","JSON","stringify","AccessToken","current","repo","Message","filename","edit","provider","toLowerCase","status","undefined","getEditedCustomResources","_step","elements","_iterator","_createForOfIteratorHelper","s","n","done","_step2","i","flag","_iterator2","object_name","err","e","f","push","ele_objects","customDataCall","getEditedCustomData","resource","custom_code","hasCustomCode","_step3","_iterator3","_step4","_iterator4","getCustomData","_step5","_iterator5","selectingArguments","_x2","_selectingArguments","_callee4","valueBody","edited_resources","custom_code_arr","modulesList","variable_arguments","a","b","c","_iterator15","_step15","_loop","updated_nodes","_iterator16","_step16","_iterator18","_step18","j","_data2","_context6","_toConsumableArray","console","log","selectVariables","length","abrupt","t0","keys","t1","t2","t3","custom_args","_iterator17","_step17","_loop2","_b","_context5","module","Resource_Type","Arguments","Attributes","Object","_temp","temp1","valBody_obj","_c","inner_flag","index","var_string","temp_dict","_context4","filter","delegateYield","t4","t5","finish","_objectSpread","x","y","custom_data","modules_save","post","updateTemplateSavedStatus","title","duration","isClosable","selectingModule","_x3","_selectingModule","_callee5","_iterator19","_step19","_context7","_selectingResourses","_callee6","resoursesList","_iterator20","_step20","_context8","modulename","submitHandler","_x5","_x6","_x7","_x8","_x9","_submitHandler","_callee7","r","m","t","o","p","arguments_response","attributes_response","attributes_data","arguments_data","_context9","addNewResourceNode","initTableData","resourcename","addingNew","createHide","addingImportantNew","createDeleteList","createNewTableData","createAttrDeleteList","addNewResourse","getSubArgumentValue","level_1_name","child","body_ele","arg","getArgumentValue","sub_child","executingscript","_x10","_executingscript","_callee9","temp_variables","_context11","handleVariableValues","variables","_step14","final_variables","idx","_iterator14","_editingTemplate","_callee10","_iterator22","_step22","_iterator23","_step23","_i2","_iterator24","_step24","_response","data1","_iterator25","_step25","_iterator26","_step26","attr","_context12","addCustomCodeForEdit","modifyEditorStatus","updateTemplateName","updateTemplateDesc","addEditResourceNode","label","is_displayed","addtoEditData","addToEditVariables","Variables","addNewAttribute","useEffect","setTimeout","_x11","editingTemplate","name","slice","_jsxs","class","children","_jsx","GitModal","TemplateModal","_Fragment","Modal","initialFocusRef","finalFocusRef","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","pb","item","FormLabel","Input","ref","el","placeholder","ModalFooter","Button","colorScheme","mr","onClick","closeOnOverlayClick","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","DatalistInput","setValue","className","onSelect","onChange","items","FormControl","display","alignItems","htmlFor","mb","Switch","target","clearState","CustomDataListInput","options","_x","addModules","_step6","_iterator6","includes","_step7","_iterator7","_x4","selectingResourses","region_list","_i","_regions","chooseRegions","_step8","flag1","_iterator8","_step9","_iterator9","objectValidation","updateRegion","DrawerFooter","variant","Alert","AlertIcon","style","width","flexDirection","fontSize","margin","background","zIndex","marginRight","MdDriveFileRenameOutline","color","padding","borderRadius","marginTop","ReactFlowProvider","ReactFlow","onInit","onNodeMouseEnter","onNodeContextMenu","fitView","ContextMenu","onMouseLeave","effect","Background","Controls","EditTables","output_data","EditCustomTable","ButtonPanel","saveClick","saveAsClick","addResourceClick","gitClick","executeClick","marginLeft","ReactDom","document","getElementById","_step10","_iterator10","_step11","_iterator11","_step12","_iterator12","_step13","_iterator13","checkingin"],"sourceRoot":""}